{"ast":null,"code":"var _jsxFileName = \"/Users/maxoliverstapyltonnorris/contenti-mono/client/src/components/LabelsMetadataComponent.tsx\";\nimport React from 'react';\nimport Button from 'react-bootstrap/Button';\nimport './LabelsMetadataComponent.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Label extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      showLabels2: false,\n      labelsSelected: [],\n      newLabel: '' // State variable to store selected labels\n    };\n    // Method to handle showing the LabelsComponent\n    this.showLabelsComponent = () => {\n      this.setState({\n        showLabels2: true\n      });\n    };\n    this.handleNewLabelChange = event => {\n      this.setState({\n        newLabel: event.target.value\n      });\n    };\n    // Method to handle selecting/deselecting labels\n    this.handleLabelChange = event => {\n      const {\n        value,\n        checked\n      } = event.target;\n      if (checked) {\n        // If the label is checked, add it to the selected labels\n        this.setState(prevState => ({\n          labelsSelected: [...prevState.labelsSelected, value]\n        }));\n      } else {\n        // If the label is unchecked, remove it from the selected labels\n        this.setState(prevState => ({\n          labelsSelected: prevState.labelsSelected.filter(label => label !== value)\n        }));\n      }\n    };\n    // Method to handle saving the selected labels\n    this.saveLabels = () => {\n      // Process and save the selected labels here\n      // For example, you can store them in the component's state or call a service to save them\n      console.log(this.state.labelsSelected); // Print selected labels for demonstration\n      this.setState({\n        showLabels2: false\n      });\n    };\n    this.addNewLabel = () => {\n      const {\n        newLabel,\n        labelsSelected\n      } = this.state;\n      if (newLabel.trim() !== '') {\n        this.setState({\n          labelsSelected: [...labelsSelected, newLabel],\n          newLabel: ''\n        });\n      }\n    };\n    this.removeLabel = label => {\n      this.setState(prevState => ({\n        labelsSelected: prevState.labelsSelected.filter(l => l !== label)\n      }));\n    };\n    // Move the LabelsComponent method outside the render method\n    this.LabelsComponent = () => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n          children: \"Choose Labels:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: this.state.newLabel,\n          onChange: this.handleNewLabelChange,\n          placeholder: \"Enter a new label\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          onClick: this.addNewLabel,\n          children: \"Add Label\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"label-tags\",\n          children: this.state.labelsSelected.map(label => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"label-tag\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: label\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"svg\", {\n              xmlns: \"http://www.w3.org/2000/svg\",\n              className: \"bi bi-x\",\n              viewBox: \"0 0 16 16\",\n              onClick: () => this.removeLabel(label),\n              children: /*#__PURE__*/_jsxDEV(\"path\", {\n                d: \"M5.293 5.293a1 1 0 0 1 1.414 0L8 6.586l1.293-1.293a1 1 0 1 1 1.414 1.414L9.414 8l1.293 1.293a1 1 0 0 1-1.414 1.414L8 9.414l-1.293 1.293a1 1 0 0 1-1.414-1.414L6.586 8 5.293 6.707a1 1 0 0 1 0-1.414z\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 116,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 15\n            }, this)]\n          }, label, true, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 13\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          onClick: this.saveLabels,\n          children: \"Save Labels\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 7\n      }, this);\n    };\n  }\n  // Add the render method\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: this.state.showLabels2 ?\n      // Call the LabelsComponent method directly\n      this.LabelsComponent() : /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"primary\",\n        onClick: this.showLabelsComponent,\n        children: \"Add Labels\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this);\n  }\n}","map":{"version":3,"names":["React","Button","jsxDEV","_jsxDEV","Label","Component","constructor","arguments","state","showLabels2","labelsSelected","newLabel","showLabelsComponent","setState","handleNewLabelChange","event","target","value","handleLabelChange","checked","prevState","filter","label","saveLabels","console","log","addNewLabel","trim","removeLabel","l","LabelsComponent","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","placeholder","variant","onClick","className","map","xmlns","viewBox","d","render"],"sources":["/Users/maxoliverstapyltonnorris/contenti-mono/client/src/components/LabelsMetadataComponent.tsx"],"sourcesContent":["import React from 'react';\nimport Button from 'react-bootstrap/Button';\nimport './LabelsMetadataComponent.css';\n\ninterface LabelState {\n  showLabels2: boolean;\n  labelsSelected: string[];\n  newLabel: string; // State variable to store selected labels\n}\n\nexport default class Label extends React.Component<any, LabelState> {\n  state: LabelState = {\n    showLabels2: false,\n    labelsSelected: [],\n    newLabel: '', // State variable to store selected labels\n  };\n\n  // Method to handle showing the LabelsComponent\n  protected showLabelsComponent = () => {\n    this.setState({ showLabels2: true });\n  };\n\n  protected handleNewLabelChange = (\n    event: React.ChangeEvent<HTMLInputElement>\n  ) => {\n    this.setState({ newLabel: event.target.value });\n  };\n\n  // Method to handle selecting/deselecting labels\n  protected handleLabelChange = (\n    event: React.ChangeEvent<HTMLInputElement>\n  ) => {\n    const { value, checked } = event.target;\n    if (checked) {\n      // If the label is checked, add it to the selected labels\n      this.setState((prevState) => ({\n        labelsSelected: [...prevState.labelsSelected, value],\n      }));\n    } else {\n      // If the label is unchecked, remove it from the selected labels\n      this.setState((prevState) => ({\n        labelsSelected: prevState.labelsSelected.filter(\n          (label) => label !== value\n        ),\n      }));\n    }\n  };\n\n  // Method to handle saving the selected labels\n  protected saveLabels = () => {\n    // Process and save the selected labels here\n    // For example, you can store them in the component's state or call a service to save them\n    console.log(this.state.labelsSelected); // Print selected labels for demonstration\n    this.setState({ showLabels2: false });\n  };\n\n  protected addNewLabel = () => {\n    const { newLabel, labelsSelected } = this.state;\n    if (newLabel.trim() !== '') {\n      this.setState({\n        labelsSelected: [...labelsSelected, newLabel],\n        newLabel: '',\n      });\n    }\n  };\n\n  protected removeLabel = (label: string) => {\n    this.setState((prevState) => ({\n      labelsSelected: prevState.labelsSelected.filter((l) => l !== label),\n    }));\n  };\n\n  // Add the render method\n  render() {\n    return (\n      <div>\n        {this.state.showLabels2 ? (\n          // Call the LabelsComponent method directly\n          this.LabelsComponent()\n        ) : (\n          <Button variant=\"primary\" onClick={this.showLabelsComponent}>\n            Add Labels\n          </Button>\n        )}\n      </div>\n    );\n  }\n\n  // Move the LabelsComponent method outside the render method\n  protected LabelsComponent = () => {\n    return (\n      <div>\n        {/* Your label selection component code here */}\n        {/* For example, you can use a form with checkboxes */}\n        <h5>Choose Labels:</h5>\n        <input\n          type=\"text\"\n          value={this.state.newLabel}\n          onChange={this.handleNewLabelChange}\n          placeholder=\"Enter a new label\"\n        />\n        <Button variant=\"primary\" onClick={this.addNewLabel}>\n          Add Label\n        </Button>\n        <div className=\"label-tags\">\n          {this.state.labelsSelected.map((label) => (\n            <div key={label} className=\"label-tag\">\n              <span>{label}</span>\n              {/* Use an SVG icon for the discard cross */}\n              <svg\n                xmlns=\"http://www.w3.org/2000/svg\"\n                className=\"bi bi-x\"\n                viewBox=\"0 0 16 16\"\n                onClick={() => this.removeLabel(label)}\n              >\n                <path d=\"M5.293 5.293a1 1 0 0 1 1.414 0L8 6.586l1.293-1.293a1 1 0 1 1 1.414 1.414L9.414 8l1.293 1.293a1 1 0 0 1-1.414 1.414L8 9.414l-1.293 1.293a1 1 0 0 1-1.414-1.414L6.586 8 5.293 6.707a1 1 0 0 1 0-1.414z\" />\n              </svg>\n            </div>\n          ))}\n        </div>\n\n        {/* Add more labels as needed */}\n        {/* Add a button to save the labels */}\n        <Button variant=\"primary\" onClick={this.saveLabels}>\n          Save Labels\n        </Button>\n      </div>\n    );\n  };\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"/Users/maxoliverstapyltonnorris/contenti-mono/client/src/components/LabelsMetadataComponent.tsx\";\nimport React from 'react';\nimport Button from 'react-bootstrap/Button';\nimport './LabelsMetadataComponent.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Label extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      showLabels2: false,\n      labelsSelected: [],\n      newLabel: '' // State variable to store selected labels\n    };\n    // Method to handle showing the LabelsComponent\n    this.showLabelsComponent = () => {\n      this.setState({\n        showLabels2: true\n      });\n    };\n    this.handleNewLabelChange = event => {\n      this.setState({\n        newLabel: event.target.value\n      });\n    };\n    // Method to handle selecting/deselecting labels\n    this.handleLabelChange = event => {\n      const {\n        value,\n        checked\n      } = event.target;\n      if (checked) {\n        // If the label is checked, add it to the selected labels\n        this.setState(prevState => ({\n          labelsSelected: [...prevState.labelsSelected, value]\n        }));\n      } else {\n        // If the label is unchecked, remove it from the selected labels\n        this.setState(prevState => ({\n          labelsSelected: prevState.labelsSelected.filter(label => label !== value)\n        }));\n      }\n    };\n    // Method to handle saving the selected labels\n    this.saveLabels = () => {\n      // Process and save the selected labels here\n      // For example, you can store them in the component's state or call a service to save them\n      console.log(this.state.labelsSelected); // Print selected labels for demonstration\n      this.setState({\n        showLabels2: false\n      });\n    };\n    this.addNewLabel = () => {\n      const {\n        newLabel,\n        labelsSelected\n      } = this.state;\n      if (newLabel.trim() !== '') {\n        this.setState({\n          labelsSelected: [...labelsSelected, newLabel],\n          newLabel: ''\n        });\n      }\n    };\n    // Move the LabelsComponent method outside the render method\n    this.LabelsComponent = () => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n          children: \"Choose Labels:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: this.state.newLabel,\n          onChange: this.handleNewLabelChange,\n          placeholder: \"Enter a new label\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          onClick: this.addNewLabel,\n          children: \"Add Label\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"label-tags\",\n          children: this.state.labelsSelected.map(label => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"label-tag\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: label\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => this.removeLabel(label),\n              children: \"Discard\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 15\n            }, this)]\n          }, label, true, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 13\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            value: \"label1\",\n            onChange: this.handleLabelChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 11\n          }, this), \"Label 1\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            value: \"label2\",\n            onChange: this.handleLabelChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 11\n          }, this), \"Label 2\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          onClick: this.saveLabels,\n          children: \"Save Labels\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 7\n      }, this);\n    };\n  }\n  // Add the render method\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: this.state.showLabels2 ?\n      // Call the LabelsComponent method directly\n      this.LabelsComponent() : /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"primary\",\n        onClick: this.showLabelsComponent,\n        children: \"Add Labels\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this);\n  }\n}","map":{"version":3,"names":["React","Button","jsxDEV","_jsxDEV","Label","Component","constructor","arguments","state","showLabels2","labelsSelected","newLabel","showLabelsComponent","setState","handleNewLabelChange","event","target","value","handleLabelChange","checked","prevState","filter","label","saveLabels","console","log","addNewLabel","trim","LabelsComponent","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","placeholder","variant","onClick","className","map","removeLabel","render"],"sources":["/Users/maxoliverstapyltonnorris/contenti-mono/client/src/components/LabelsMetadataComponent.tsx"],"sourcesContent":["import React from 'react';\nimport Button from 'react-bootstrap/Button';\nimport './LabelsMetadataComponent.css';\n\ninterface LabelState {\n  showLabels2: boolean;\n  labelsSelected: string[];\n  newLabel: string; // State variable to store selected labels\n}\n\nexport default class Label extends React.Component<any, LabelState> {\n  state: LabelState = {\n    showLabels2: false,\n    labelsSelected: [],\n    newLabel: '', // State variable to store selected labels\n  };\n\n  // Method to handle showing the LabelsComponent\n  protected showLabelsComponent = () => {\n    this.setState({ showLabels2: true });\n  };\n\n  protected handleNewLabelChange = (\n    event: React.ChangeEvent<HTMLInputElement>\n  ) => {\n    this.setState({ newLabel: event.target.value });\n  };\n\n  // Method to handle selecting/deselecting labels\n  protected handleLabelChange = (\n    event: React.ChangeEvent<HTMLInputElement>\n  ) => {\n    const { value, checked } = event.target;\n    if (checked) {\n      // If the label is checked, add it to the selected labels\n      this.setState((prevState) => ({\n        labelsSelected: [...prevState.labelsSelected, value],\n      }));\n    } else {\n      // If the label is unchecked, remove it from the selected labels\n      this.setState((prevState) => ({\n        labelsSelected: prevState.labelsSelected.filter(\n          (label) => label !== value\n        ),\n      }));\n    }\n  };\n\n  // Method to handle saving the selected labels\n  protected saveLabels = () => {\n    // Process and save the selected labels here\n    // For example, you can store them in the component's state or call a service to save them\n    console.log(this.state.labelsSelected); // Print selected labels for demonstration\n    this.setState({ showLabels2: false });\n  };\n\n  protected addNewLabel = () => {\n    const { newLabel, labelsSelected } = this.state;\n    if (newLabel.trim() !== '') {\n      this.setState({\n        labelsSelected: [...labelsSelected, newLabel],\n        newLabel: '',\n      });\n    }\n  };\n\n  // Add the render method\n  render() {\n    return (\n      <div>\n        {this.state.showLabels2 ? (\n          // Call the LabelsComponent method directly\n          this.LabelsComponent()\n        ) : (\n          <Button variant=\"primary\" onClick={this.showLabelsComponent}>\n            Add Labels\n          </Button>\n        )}\n      </div>\n    );\n  }\n\n  // Move the LabelsComponent method outside the render method\n  protected LabelsComponent = () => {\n    return (\n      <div>\n        {/* Your label selection component code here */}\n        {/* For example, you can use a form with checkboxes */}\n        <h5>Choose Labels:</h5>\n        <input\n          type=\"text\"\n          value={this.state.newLabel}\n          onChange={this.handleNewLabelChange}\n          placeholder=\"Enter a new label\"\n        />\n        <Button variant=\"primary\" onClick={this.addNewLabel}>\n          Add Label\n        </Button>\n        <div className=\"label-tags\">\n          {this.state.labelsSelected.map((label) => (\n            <div key={label} className=\"label-tag\">\n              <span>{label}</span>\n              <button onClick={() => this.removeLabel(label)}>Discard</button>\n            </div>\n          ))}\n        </div>\n\n        <label>\n          <input\n            type=\"checkbox\"\n            value=\"label1\"\n            onChange={this.handleLabelChange}\n          />\n          Label 1\n        </label>\n        <br />\n        <label>\n          <input\n            type=\"checkbox\"\n            value=\"label2\"\n            onChange={this.handleLabelChange}\n          />\n          Label 2\n        </label>\n        <br />\n        {/* Add more labels as needed */}\n        {/* Add a button to save the labels */}\n        <Button variant=\"primary\" onClick={this.saveLabels}>\n          Save Labels\n        </Button>\n      </div>\n    );\n  };\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
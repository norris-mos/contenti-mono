{"ast":null,"code":"import _regeneratorRuntime from \"/Users/maxoliverstapyltonnorris/H5P-Nodejs-library/packages/h5p-rest-example-client/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/Users/maxoliverstapyltonnorris/H5P-Nodejs-library/packages/h5p-rest-example-client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _classCallCheck from \"/Users/maxoliverstapyltonnorris/H5P-Nodejs-library/packages/h5p-rest-example-client/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/maxoliverstapyltonnorris/H5P-Nodejs-library/packages/h5p-rest-example-client/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"/Users/maxoliverstapyltonnorris/H5P-Nodejs-library/packages/h5p-rest-example-client/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/maxoliverstapyltonnorris/H5P-Nodejs-library/packages/h5p-rest-example-client/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport _wrapNativeSuper from \"/Users/maxoliverstapyltonnorris/H5P-Nodejs-library/packages/h5p-rest-example-client/node_modules/@babel/runtime/helpers/esm/wrapNativeSuper.js\";\nimport { mergeH5PIntegration, removeUnusedContent } from './h5p-utils';\nimport { addScripts, addStylesheets } from './dom-utils';\n/**\n * A Web Component displaying H5P content.\n */\nexport var H5PPlayerComponent = /*#__PURE__*/function (_HTMLElement) {\n  _inherits(H5PPlayerComponent, _HTMLElement);\n  var _super = _createSuper(H5PPlayerComponent);\n  function H5PPlayerComponent() {\n    var _this;\n    _classCallCheck(this, H5PPlayerComponent);\n    _this = _super.call(this);\n    /**\n     * Called when any H5P content signals that it was initialized\n     */\n    _this.onContentInitialized = function () {\n      var _a, _b, _c;\n      var divMode = _this.playerModel.embedTypes.includes('div');\n      _this.h5pObject = divMode ? window.H5P : document.getElementById(\"h5p-iframe-\".concat(_this.playerModel.contentId)).contentWindow.H5P;\n      _this.h5pWindow = divMode ? window : document.getElementById(\"h5p-iframe-\".concat(_this.playerModel.contentId)).contentWindow;\n      _this.h5pInstance = (_b = (_a = _this.h5pObject) === null || _a === void 0 ? void 0 : _a.instances) === null || _b === void 0 ? void 0 : _b.find(\n      // H5P converts our string contentId into number, so we don't use ===\n      // eslint-disable-next-line eqeqeq\n      function (i) {\n        return i.contentId == _this.contentId;\n      });\n      if (_this.h5pInstance) {\n        _this.dispatchEvent(new CustomEvent('initialized', {\n          detail: {\n            contentId: _this.contentId\n          }\n        }));\n        if ((_c = window.H5P) === null || _c === void 0 ? void 0 : _c.externalDispatcher) {\n          window.H5P.externalDispatcher.off('initialized', _this.onContentInitialized);\n        }\n      }\n    };\n    _this.onxAPI = function (event) {\n      var _a, _b, _c, _d;\n      if (\"\".concat((_d = (_c = (_b = (_a = event.data) === null || _a === void 0 ? void 0 : _a.statement) === null || _b === void 0 ? void 0 : _b.object) === null || _c === void 0 ? void 0 : _c.definition) === null || _d === void 0 ? void 0 : _d.extensions['http://h5p.org/x-api/h5p-local-content-id']) === \"\".concat(_this.playerModel.contentId)) {\n        var context = {\n          contentId: _this.playerModel.contentId\n        };\n        _this.dispatchEvent(new CustomEvent('xAPI', {\n          detail: {\n            statement: event.data.statement,\n            context: context,\n            event: event\n          }\n        }));\n      }\n    };\n    H5PPlayerComponent.initTemplate();\n    return _this;\n  }\n  _createClass(H5PPlayerComponent, [{\n    key: \"contentId\",\n    get: function get() {\n      return this.getAttribute('content-id');\n    },\n    set: function set(contentId) {\n      this.setAttribute('content-id', contentId);\n    }\n    /**\n     * The internal H5P instance object of the H5P content.\n     *\n     * Only available after the `initialized` event was fired. Important: This\n     * object is only partially typed and there are more properties and methods\n     * on it!\n     */\n  }, {\n    key: \"h5pInstance\",\n    get: function get() {\n      return this.h5pInstanceInternal;\n    },\n    set: function set(value) {\n      this.h5pInstanceInternal = value;\n    }\n    /**\n     * The global H5P object / namespace (normally accessible through \"H5P...\"\n     * or \"window.H5P\") of the content type. Depending on the embed type this\n     * can be an object from the internal iframe, so you can use it to break the\n     * barrier of the iframe and execute JavaScript inside the iframe.\n     *\n     * Only available after the `initialized` event was fired. Important: This\n     * object is only partially typed and there are more properties and methods\n     * on it!\n     */\n  }, {\n    key: \"h5pObject\",\n    get: function get() {\n      return this.h5pObjectInternal;\n    },\n    set: function set(value) {\n      this.h5pObjectInternal = value;\n    }\n    /**\n     * The window object in which the H5P object exists and is rendered in. This\n     * is the iframe's contentWindow or the parent's window, depending on the\n     * embed type.\n     */\n  }, {\n    key: \"h5pWindow\",\n    get: function get() {\n      return this.h5pWindowInternal;\n    },\n    set: function set(value) {\n      this.h5pWindowInternal = value;\n    }\n    /**\n     * Called when the component needs to load data about content. The endpoint\n     * called in here should call H5PPlayer.render() and send back the player\n     * model.\n     *\n     * Should throw an error with a message in the message property if something\n     * goes wrong.\n     */\n  }, {\n    key: \"loadContentCallback\",\n    get: function get() {\n      return this.privateLoadContentCallback;\n    },\n    set: function set(callback) {\n      var mustRender = this.privateLoadContentCallback !== callback;\n      this.privateLoadContentCallback = callback;\n      if (mustRender) {\n        this.render(this.contentId);\n      }\n    }\n    /**\n     * Indicates changes to which attributes should trigger calls to\n     * attributeChangedCallback.\n     * @memberof H5PPlayerComponent\n     */\n  }, {\n    key: \"attributeChangedCallback\",\n    value:\n    /**\n     * Called when one of the attributes in observedAttributes changes.\n     */\n    function () {\n      var _attributeChangedCallback = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(name, oldVal, newVal) {\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              if (!(name === 'content-id')) {\n                _context.next = 4;\n                break;\n              }\n              if (oldVal) {\n                removeUnusedContent(oldVal);\n              }\n              _context.next = 4;\n              return this.render(newVal);\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, this);\n      }));\n      function attributeChangedCallback(_x, _x2, _x3) {\n        return _attributeChangedCallback.apply(this, arguments);\n      }\n      return attributeChangedCallback;\n    }()\n    /**\n     * Called when the component is added to the DOM.\n     */\n  }, {\n    key: \"connectedCallback\",\n    value: function connectedCallback() {\n      this.appendChild(H5PPlayerComponent.template.content.cloneNode(true));\n      this.root = this.querySelector('.h5p-player-component-root');\n      // We must notify the H5P content inside the player that the size of the\n      // component has changed. Otherwise some content types won't resize\n      // properly.\n      this.resizeObserver = new ResizeObserver(function () {\n        var _a;\n        if ((_a = window.H5P) === null || _a === void 0 ? void 0 : _a.instances) {\n          window.H5P.instances.forEach(function (instance) {\n            instance.trigger('resize');\n          });\n        }\n      });\n      this.resizeObserver.observe(this);\n    }\n    /**\n     * Called when the component is removed from the DOM.\n     */\n  }, {\n    key: \"disconnectedCallback\",\n    value: function disconnectedCallback() {\n      var _a;\n      if (this.contentId) {\n        removeUnusedContent(this.contentId);\n      }\n      if (this.resizeObserver) {\n        this.resizeObserver.disconnect();\n        this.resizeObserver = null;\n      }\n      if ((_a = window.H5P) === null || _a === void 0 ? void 0 : _a.externalDispatcher) {\n        window.H5P.externalDispatcher.off('initialized', this.onContentInitialized);\n        window.H5P.externalDispatcher.off('xAPI', this.onxAPI);\n      }\n    }\n    /**\n     * Returns the copyright notice in HTML that you can insert somewhere to\n     * display it. Undefined if there is no copyright information.\n     */\n  }, {\n    key: \"getCopyrightHtml\",\n    value: function getCopyrightHtml() {\n      var _a;\n      if (!this.h5pInstance) {\n        console.error('Cannot show copyright as H5P instance is undefined. The H5P object might not be initialized yet.');\n        return undefined;\n      }\n      if (!this.h5pObject) {\n        console.error('H5P object undefined. This typically means H5P has not been initialized yet.');\n        return undefined;\n      }\n      var metadata = (_a = this.h5pInstance.contentData) === null || _a === void 0 ? void 0 : _a.metadata;\n      if (!metadata) {\n        metadata = this.playerModel.integration.contents[\"cid-\".concat(this.playerModel.contentId)].metadata;\n        if (!metadata) {\n          return undefined;\n        }\n      }\n      var parameters;\n      // We need to call JSON.parse in the context of the window the H5P\n      // content exists in. The reason is that H5P.getCopyrights compares\n      // object prototypes when traversing the parameters and the object\n      // prototypes are not identical across windows.  (Cp.\n      // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/instanceof#instanceof_and_multiple_context_e.g._frames_or_windows)\n      try {\n        parameters = this.h5pWindow.JSON.parse(this.playerModel.integration.contents[\"cid-\".concat(this.playerModel.contentId)].jsonContent);\n      } catch (error) {\n        console.error('Could not get parameters for content object with id ', this.playerModel.contentId, '. The copyright text might be incomplete. Details: ', error);\n      }\n      return this.h5pObject.getCopyrights(this.h5pInstance, parameters, this.playerModel.contentId, metadata);\n    }\n    /**\n     * @returns true if there is copyright information to be displayed.\n     */\n  }, {\n    key: \"hasCopyrightInformation\",\n    value: function hasCopyrightInformation() {\n      return !!this.getCopyrightHtml();\n    }\n    /**\n     * Asks the H5P content to resize itself inside the dimensions of the\n     * container.\n     *\n     * Has no effect until the H5P object has fully initialized.\n     */\n  }, {\n    key: \"resize\",\n    value: function resize() {\n      if (!this.h5pInstance || !this.h5pInstance.trigger) {\n        return;\n      }\n      this.h5pInstance.trigger('resize');\n    }\n    /**\n     * Displays the copyright notice in the regular H5P way.\n     */\n  }, {\n    key: \"showCopyright\",\n    value: function showCopyright() {\n      var copyrightHtml = this.getCopyrightHtml();\n      var dialog = new this.h5pObject.Dialog('copyrights', this.h5pObject.t('copyrightInformation'), copyrightHtml, this.h5pObject.jQuery('.h5p-container'));\n      dialog.open(true);\n    }\n    /**\n     * Displays content.\n     * @param {string} contentId\n     */\n  }, {\n    key: \"render\",\n    value: function () {\n      var _render = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(contentId) {\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              if (this.loadContentCallback) {\n                _context2.next = 2;\n                break;\n              }\n              return _context2.abrupt(\"return\");\n            case 2:\n              _context2.prev = 2;\n              _context2.next = 5;\n              return this.loadContentCallback(contentId);\n            case 5:\n              this.playerModel = _context2.sent;\n              _context2.next = 12;\n              break;\n            case 8:\n              _context2.prev = 8;\n              _context2.t0 = _context2[\"catch\"](2);\n              this.root.innerHTML = \"<p>Error loading H5P content from server: \".concat(_context2.t0.message, \"</p>\");\n              return _context2.abrupt(\"return\");\n            case 12:\n              // Reset the component's DOM\n              this.root.innerHTML = '';\n              // We have to prevent H5P from initializing when the h5p.js file is\n              // loaded.\n              if (!window.H5P) {\n                window.H5P = {};\n              }\n              window.H5P.preventInit = true;\n              // We merge the H5P integration we received from the server with the one\n              // that already exists in the window globally to allow for several H5P\n              // content objects on a single page.\n              mergeH5PIntegration(this.playerModel.integration, this.playerModel.contentId);\n              // The server has already told us which embed types are generally\n              // acceptable for the content type, but we prefer div if possible to\n              // avoid too many iframes.\n              if (!this.playerModel.embedTypes.includes('div')) {\n                _context2.next = 21;\n                break;\n              }\n              _context2.next = 19;\n              return this.renderDiv(this.playerModel);\n            case 19:\n              _context2.next = 23;\n              break;\n            case 21:\n              _context2.next = 23;\n              return this.renderIframe(this.playerModel);\n            case 23:\n              // Initialize H5P with the component as root\n              window.H5P.preventInit = false;\n              if (window.H5P.externalDispatcher) {\n                window.H5P.externalDispatcher.on('initialized', this.onContentInitialized, this);\n              }\n              window.H5P.preventInit = false;\n              if (window.H5P.externalDispatcher) {\n                // detach xAPI listener first to avoid having multiple listeners on the\n                // same content (can safely be done even if it hasn't been attached\n                // before)\n                window.H5P.externalDispatcher.off('xAPI', this.onxAPI);\n                // attach xAPI listener\n                window.H5P.externalDispatcher.on('xAPI', this.onxAPI);\n              }\n              window.H5P.init(this.root);\n            case 28:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2, this, [[2, 8]]);\n      }));\n      function render(_x4) {\n        return _render.apply(this, arguments);\n      }\n      return render;\n    }()\n    /**\n     * Creates a new DOM for the H5P using a div as container.\n     */\n  }, {\n    key: \"renderDiv\",\n    value: function () {\n      var _renderDiv = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3(playerModel) {\n        var h5pContainerDiv, h5pContentDiv;\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) switch (_context3.prev = _context3.next) {\n            case 0:\n              addStylesheets(playerModel.styles, document.getElementsByTagName('head')[0]);\n              _context3.next = 3;\n              return addScripts(playerModel.scripts, document.getElementsByTagName('head')[0]);\n            case 3:\n              h5pContainerDiv = document.createElement('div');\n              h5pContainerDiv.className = 'h5p-iframe';\n              this.root.appendChild(h5pContainerDiv);\n              h5pContentDiv = document.createElement('div');\n              h5pContentDiv.className = 'h5p-content';\n              h5pContentDiv.dataset.contentId = playerModel.contentId;\n              h5pContainerDiv.appendChild(h5pContentDiv);\n            case 10:\n            case \"end\":\n              return _context3.stop();\n          }\n        }, _callee3, this);\n      }));\n      function renderDiv(_x5) {\n        return _renderDiv.apply(this, arguments);\n      }\n      return renderDiv;\n    }()\n    /**\n     * Creates a new DOM for the H5P using an iframe as container.\n     * @param {IPlayerModel} playerModel\n     */\n  }, {\n    key: \"renderIframe\",\n    value: function () {\n      var _renderIframe = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4(playerModel) {\n        var h5pIFrameWrapper;\n        return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n          while (1) switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.next = 2;\n              return addScripts(window.H5PIntegration.core.scripts, document.getElementsByTagName('head')[0]);\n            case 2:\n              h5pIFrameWrapper = document.createElement('div');\n              h5pIFrameWrapper.className = \"h5p-iframe-wrapper\";\n              h5pIFrameWrapper.innerHTML = \"<iframe id=\\\"h5p-iframe-\".concat(playerModel.contentId, \"\\\"\\n        class=\\\"h5p-iframe\\\" data-content-id=\\\"\").concat(playerModel.contentId, \"\\\"\\n        style=\\\"height:1px\\\" src=\\\"about:blank\\\" frameBorder=\\\"0\\\" scrolling=\\\"no\\\"\\n        title=\\\"H5P\\\"></iframe>\");\n              this.root.appendChild(h5pIFrameWrapper);\n            case 6:\n            case \"end\":\n              return _context4.stop();\n          }\n        }, _callee4, this);\n      }));\n      function renderIframe(_x6) {\n        return _renderIframe.apply(this, arguments);\n      }\n      return renderIframe;\n    }()\n  }], [{\n    key: \"observedAttributes\",\n    get: function get() {\n      return ['content-id'];\n    }\n  }, {\n    key: \"initTemplate\",\n    value: function initTemplate() {\n      // We create the static template only once\n      if (!H5PPlayerComponent.template) {\n        H5PPlayerComponent.template = document.createElement('template');\n        H5PPlayerComponent.template.innerHTML = \"\\n                <style>\\n                    .h5p-iframe {\\n                        font-family: Sans-Serif;\\n                        width: 100%;\\n                        margin: 0;\\n                        padding: 0;\\n                    }\\n                    .h5p-iframe .h5p-container {\\n                        overflow: hidden;\\n                    }\\n                    .h5p-iframe .h5p-content {\\n                        font-size: 16px;\\n                        line-height: 1.5em;\\n                        width: 100%;\\n                        height: auto;\\n                    }\\n                    .h5p-iframe .h5p-fullscreen .h5p-content,\\n                    .h5p-fullscreen .h5p-iframe,\\n                    .h5p-iframe .h5p-semi-fullscreen .h5p-content {\\n                        height: 100%;\\n                    }\\n                </style>\\n                <div class=\\\"h5p-player-component-root\\\"></div>\\n                \";\n      }\n    }\n  }]);\n  return H5PPlayerComponent;\n}( /*#__PURE__*/_wrapNativeSuper(HTMLElement));","map":{"version":3,"names":["mergeH5PIntegration","removeUnusedContent","addScripts","addStylesheets","H5PPlayerComponent","_HTMLElement","_inherits","_super","_createSuper","_this","_classCallCheck","call","onContentInitialized","divMode","playerModel","embedTypes","includes","h5pObject","window","H5P","document","getElementById","concat","contentId","contentWindow","h5pWindow","h5pInstance","_b","_a","instances","find","i","dispatchEvent","CustomEvent","detail","_c","externalDispatcher","off","onxAPI","event","_d","data","statement","object","definition","extensions","context","initTemplate","_createClass","key","get","getAttribute","set","setAttribute","h5pInstanceInternal","value","h5pObjectInternal","h5pWindowInternal","privateLoadContentCallback","callback","mustRender","render","_attributeChangedCallback","_asyncToGenerator","_regeneratorRuntime","mark","_callee","name","oldVal","newVal","wrap","_callee$","_context","prev","next","stop","attributeChangedCallback","_x","_x2","_x3","apply","arguments","connectedCallback","appendChild","template","content","cloneNode","root","querySelector","resizeObserver","ResizeObserver","forEach","instance","trigger","observe","disconnectedCallback","disconnect","getCopyrightHtml","console","error","undefined","metadata","contentData","integration","contents","parameters","JSON","parse","jsonContent","getCopyrights","hasCopyrightInformation","resize","showCopyright","copyrightHtml","dialog","Dialog","t","jQuery","open","_render","_callee2","_callee2$","_context2","loadContentCallback","abrupt","sent","t0","innerHTML","message","preventInit","renderDiv","renderIframe","on","init","_x4","_renderDiv","_callee3","h5pContainerDiv","h5pContentDiv","_callee3$","_context3","styles","getElementsByTagName","scripts","createElement","className","dataset","_x5","_renderIframe","_callee4","h5pIFrameWrapper","_callee4$","_context4","H5PIntegration","core","_x6","_wrapNativeSuper","HTMLElement"],"sources":["/Users/maxoliverstapyltonnorris/H5P-Nodejs-library/packages/h5p-webcomponents/src/h5p-player.ts"],"sourcesContent":["import type { IPlayerModel } from '@lumieducation/h5p-server';\n\nimport { mergeH5PIntegration, removeUnusedContent } from './h5p-utils';\nimport { addScripts, addStylesheets } from './dom-utils';\nimport { IH5P, IH5PInstance } from './h5p-types';\n\nexport interface IxAPIEvent {\n    data: {\n        statement: any;\n    };\n}\n\nexport interface IContext {\n    contentId: string;\n}\n\n/**\n * A Web Component displaying H5P content.\n */\nexport class H5PPlayerComponent extends HTMLElement {\n    get contentId(): string {\n        return this.getAttribute('content-id');\n    }\n\n    set contentId(contentId: string) {\n        this.setAttribute('content-id', contentId);\n    }\n\n    /**\n     * The internal H5P instance object of the H5P content.\n     *\n     * Only available after the `initialized` event was fired. Important: This\n     * object is only partially typed and there are more properties and methods\n     * on it!\n     */\n    get h5pInstance(): IH5PInstance {\n        return this.h5pInstanceInternal;\n    }\n    private set h5pInstance(value: IH5PInstance) {\n        this.h5pInstanceInternal = value;\n    }\n\n    /**\n     * The global H5P object / namespace (normally accessible through \"H5P...\"\n     * or \"window.H5P\") of the content type. Depending on the embed type this\n     * can be an object from the internal iframe, so you can use it to break the\n     * barrier of the iframe and execute JavaScript inside the iframe.\n     *\n     * Only available after the `initialized` event was fired. Important: This\n     * object is only partially typed and there are more properties and methods\n     * on it!\n     */\n    get h5pObject(): IH5P {\n        return this.h5pObjectInternal;\n    }\n    private set h5pObject(value: IH5P) {\n        this.h5pObjectInternal = value;\n    }\n\n    /**\n     * The window object in which the H5P object exists and is rendered in. This\n     * is the iframe's contentWindow or the parent's window, depending on the\n     * embed type.\n     */\n    get h5pWindow(): any {\n        return this.h5pWindowInternal;\n    }\n    private set h5pWindow(value: any) {\n        this.h5pWindowInternal = value;\n    }\n\n    /**\n     * Called when the component needs to load data about content. The endpoint\n     * called in here should call H5PPlayer.render() and send back the player\n     * model.\n     *\n     * Should throw an error with a message in the message property if something\n     * goes wrong.\n     */\n    public get loadContentCallback(): (\n        contentId: string\n    ) => Promise<IPlayerModel> {\n        return this.privateLoadContentCallback;\n    }\n\n    public set loadContentCallback(\n        callback: (contentId: string) => Promise<IPlayerModel>\n    ) {\n        const mustRender = this.privateLoadContentCallback !== callback;\n        this.privateLoadContentCallback = callback;\n        if (mustRender) {\n            this.render(this.contentId);\n        }\n    }\n\n    /**\n     * Indicates changes to which attributes should trigger calls to\n     * attributeChangedCallback.\n     * @memberof H5PPlayerComponent\n     */\n    static get observedAttributes(): string[] {\n        return ['content-id'];\n    }\n    constructor() {\n        super();\n\n        H5PPlayerComponent.initTemplate();\n    }\n\n    private static template: HTMLTemplateElement;\n    private playerModel: IPlayerModel;\n    private privateLoadContentCallback: (\n        contentId: string\n    ) => Promise<IPlayerModel>;\n    private resizeObserver: ResizeObserver;\n    private root: HTMLElement;\n    private h5pInstanceInternal: IH5PInstance;\n    private h5pObjectInternal: IH5P;\n    private h5pWindowInternal: any;\n\n    private static initTemplate(): void {\n        // We create the static template only once\n        if (!H5PPlayerComponent.template) {\n            H5PPlayerComponent.template = document.createElement('template');\n            H5PPlayerComponent.template.innerHTML = `\n                <style>\n                    .h5p-iframe {\n                        font-family: Sans-Serif;\n                        width: 100%;\n                        margin: 0;\n                        padding: 0;\n                    }\n                    .h5p-iframe .h5p-container {\n                        overflow: hidden;\n                    }\n                    .h5p-iframe .h5p-content {\n                        font-size: 16px;\n                        line-height: 1.5em;\n                        width: 100%;\n                        height: auto;\n                    }\n                    .h5p-iframe .h5p-fullscreen .h5p-content,\n                    .h5p-fullscreen .h5p-iframe,\n                    .h5p-iframe .h5p-semi-fullscreen .h5p-content {\n                        height: 100%;\n                    }\n                </style>\n                <div class=\"h5p-player-component-root\"></div>\n                `;\n        }\n    }\n\n    /**\n     * Called when one of the attributes in observedAttributes changes.\n     */\n    async attributeChangedCallback(\n        name: string,\n        oldVal: any,\n        newVal: any\n    ): Promise<void> {\n        if (name === 'content-id') {\n            if (oldVal) {\n                removeUnusedContent(oldVal);\n            }\n            await this.render(newVal);\n        }\n    }\n\n    /**\n     * Called when the component is added to the DOM.\n     */\n    connectedCallback(): void {\n        this.appendChild(H5PPlayerComponent.template.content.cloneNode(true));\n        this.root = this.querySelector('.h5p-player-component-root');\n\n        // We must notify the H5P content inside the player that the size of the\n        // component has changed. Otherwise some content types won't resize\n        // properly.\n        this.resizeObserver = new ResizeObserver(() => {\n            if (window.H5P?.instances) {\n                window.H5P.instances.forEach((instance) => {\n                    instance.trigger('resize');\n                });\n            }\n        });\n        this.resizeObserver.observe(this);\n    }\n\n    /**\n     * Called when the component is removed from the DOM.\n     */\n    disconnectedCallback(): void {\n        if (this.contentId) {\n            removeUnusedContent(this.contentId);\n        }\n        if (this.resizeObserver) {\n            this.resizeObserver.disconnect();\n            this.resizeObserver = null;\n        }\n        if (window.H5P?.externalDispatcher) {\n            window.H5P.externalDispatcher.off(\n                'initialized',\n                this.onContentInitialized\n            );\n            window.H5P.externalDispatcher.off('xAPI', this.onxAPI);\n        }\n    }\n\n    /**\n     * Returns the copyright notice in HTML that you can insert somewhere to\n     * display it. Undefined if there is no copyright information.\n     */\n    public getCopyrightHtml(): string | undefined {\n        if (!this.h5pInstance) {\n            console.error(\n                'Cannot show copyright as H5P instance is undefined. The H5P object might not be initialized yet.'\n            );\n            return undefined;\n        }\n        if (!this.h5pObject) {\n            console.error(\n                'H5P object undefined. This typically means H5P has not been initialized yet.'\n            );\n            return undefined;\n        }\n\n        let metadata = this.h5pInstance.contentData?.metadata;\n        if (!metadata) {\n            metadata =\n                this.playerModel.integration.contents[\n                    `cid-${this.playerModel.contentId}`\n                ].metadata;\n            if (!metadata) {\n                return undefined;\n            }\n        }\n\n        let parameters: any;\n        // We need to call JSON.parse in the context of the window the H5P\n        // content exists in. The reason is that H5P.getCopyrights compares\n        // object prototypes when traversing the parameters and the object\n        // prototypes are not identical across windows.  (Cp.\n        // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/instanceof#instanceof_and_multiple_context_e.g._frames_or_windows)\n        try {\n            parameters = this.h5pWindow.JSON.parse(\n                this.playerModel.integration.contents[\n                    `cid-${this.playerModel.contentId}`\n                ].jsonContent\n            );\n        } catch (error: any) {\n            console.error(\n                'Could not get parameters for content object with id ',\n                this.playerModel.contentId,\n                '. The copyright text might be incomplete. Details: ',\n                error\n            );\n        }\n\n        return this.h5pObject.getCopyrights(\n            this.h5pInstance,\n            parameters,\n            this.playerModel.contentId,\n            metadata\n        );\n    }\n\n    /**\n     * @returns true if there is copyright information to be displayed.\n     */\n    public hasCopyrightInformation(): boolean {\n        return !!this.getCopyrightHtml();\n    }\n\n    /**\n     * Asks the H5P content to resize itself inside the dimensions of the\n     * container.\n     *\n     * Has no effect until the H5P object has fully initialized.\n     */\n    public resize(): void {\n        if (!this.h5pInstance || !this.h5pInstance.trigger) {\n            return;\n        }\n        this.h5pInstance.trigger('resize');\n    }\n\n    /**\n     * Displays the copyright notice in the regular H5P way.\n     */\n    public showCopyright(): void {\n        const copyrightHtml = this.getCopyrightHtml();\n        const dialog = new this.h5pObject.Dialog(\n            'copyrights',\n            this.h5pObject.t('copyrightInformation'),\n            copyrightHtml,\n            this.h5pObject.jQuery('.h5p-container')\n        );\n        dialog.open(true);\n    }\n\n    /**\n     * Called when any H5P content signals that it was initialized\n     */\n    private onContentInitialized = (): void => {\n        const divMode = this.playerModel.embedTypes.includes('div');\n        this.h5pObject = divMode\n            ? window.H5P\n            : (\n                  document.getElementById(\n                      `h5p-iframe-${this.playerModel.contentId}`\n                  ) as HTMLIFrameElement\n              ).contentWindow.H5P;\n        this.h5pWindow = divMode\n            ? window\n            : (\n                  document.getElementById(\n                      `h5p-iframe-${this.playerModel.contentId}`\n                  ) as HTMLIFrameElement\n              ).contentWindow;\n        this.h5pInstance = this.h5pObject?.instances?.find(\n            // H5P converts our string contentId into number, so we don't use ===\n            // eslint-disable-next-line eqeqeq\n            (i) => i.contentId == this.contentId\n        );\n        if (this.h5pInstance) {\n            this.dispatchEvent(\n                new CustomEvent('initialized', {\n                    detail: { contentId: this.contentId }\n                })\n            );\n            if (window.H5P?.externalDispatcher) {\n                window.H5P.externalDispatcher.off(\n                    'initialized',\n                    this.onContentInitialized\n                );\n            }\n        }\n    };\n\n    private onxAPI = (event: IxAPIEvent): void => {\n        if (\n            `${event.data?.statement?.object?.definition?.extensions['http://h5p.org/x-api/h5p-local-content-id']}` ===\n            `${this.playerModel.contentId}`\n        ) {\n            const context: IContext = {\n                contentId: this.playerModel.contentId\n            };\n            this.dispatchEvent(\n                new CustomEvent('xAPI', {\n                    detail: {\n                        statement: event.data.statement,\n                        context,\n                        event\n                    }\n                })\n            );\n        }\n    };\n\n    /**\n     * Displays content.\n     * @param {string} contentId\n     */\n    private async render(contentId: string): Promise<void> {\n        if (!this.loadContentCallback) {\n            return;\n        }\n        // Get data from H5P server\n        try {\n            this.playerModel = await this.loadContentCallback(contentId);\n        } catch (error) {\n            this.root.innerHTML = `<p>Error loading H5P content from server: ${error.message}</p>`;\n            return;\n        }\n\n        // Reset the component's DOM\n        this.root.innerHTML = '';\n\n        // We have to prevent H5P from initializing when the h5p.js file is\n        // loaded.\n        if (!window.H5P) {\n            window.H5P = {} as any;\n        }\n        window.H5P.preventInit = true;\n\n        // We merge the H5P integration we received from the server with the one\n        // that already exists in the window globally to allow for several H5P\n        // content objects on a single page.\n        mergeH5PIntegration(\n            this.playerModel.integration,\n            this.playerModel.contentId\n        );\n\n        // The server has already told us which embed types are generally\n        // acceptable for the content type, but we prefer div if possible to\n        // avoid too many iframes.\n        if (this.playerModel.embedTypes.includes('div')) {\n            await this.renderDiv(this.playerModel);\n        } else {\n            await this.renderIframe(this.playerModel);\n        }\n\n        // Initialize H5P with the component as root\n        window.H5P.preventInit = false;\n        if (window.H5P.externalDispatcher) {\n            window.H5P.externalDispatcher.on(\n                'initialized',\n                this.onContentInitialized,\n                this\n            );\n        }\n        window.H5P.preventInit = false;\n\n        if (window.H5P.externalDispatcher) {\n            // detach xAPI listener first to avoid having multiple listeners on the\n            // same content (can safely be done even if it hasn't been attached\n            // before)\n            window.H5P.externalDispatcher.off('xAPI', this.onxAPI);\n            // attach xAPI listener\n            window.H5P.externalDispatcher.on('xAPI', this.onxAPI);\n        }\n\n        window.H5P.init(this.root);\n    }\n\n    /**\n     * Creates a new DOM for the H5P using a div as container.\n     */\n    private async renderDiv(playerModel: IPlayerModel): Promise<void> {\n        addStylesheets(\n            playerModel.styles,\n            document.getElementsByTagName('head')[0]\n        );\n        await addScripts(\n            playerModel.scripts,\n            document.getElementsByTagName('head')[0]\n        );\n\n        const h5pContainerDiv = document.createElement('div');\n        h5pContainerDiv.className = 'h5p-iframe';\n        this.root.appendChild(h5pContainerDiv);\n\n        const h5pContentDiv = document.createElement('div');\n        h5pContentDiv.className = 'h5p-content';\n        h5pContentDiv.dataset.contentId = playerModel.contentId;\n        h5pContainerDiv.appendChild(h5pContentDiv);\n    }\n\n    /**\n     * Creates a new DOM for the H5P using an iframe as container.\n     * @param {IPlayerModel} playerModel\n     */\n    private async renderIframe(playerModel: IPlayerModel): Promise<void> {\n        // We don't need to load styles, as they are all loaded within the\n        // iframe.\n        await addScripts(\n            window.H5PIntegration.core.scripts,\n            document.getElementsByTagName('head')[0]\n        );\n\n        const h5pIFrameWrapper = document.createElement('div');\n        h5pIFrameWrapper.className = `h5p-iframe-wrapper`;\n        h5pIFrameWrapper.innerHTML = `<iframe id=\"h5p-iframe-${playerModel.contentId}\"\n        class=\"h5p-iframe\" data-content-id=\"${playerModel.contentId}\"\n        style=\"height:1px\" src=\"about:blank\" frameBorder=\"0\" scrolling=\"no\"\n        title=\"H5P\"></iframe>`;\n        this.root.appendChild(h5pIFrameWrapper);\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
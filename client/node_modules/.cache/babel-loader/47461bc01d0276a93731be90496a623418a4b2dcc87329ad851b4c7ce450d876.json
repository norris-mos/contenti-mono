{"ast":null,"code":"var _jsxFileName = \"/Users/maxoliverstapyltonnorris/contenti-mono/client/src/components/LabelsMetadataComponent.tsx\";\nimport React from 'react';\nimport Button from 'react-bootstrap/Button';\nimport './LabelsMetadataComponent.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Label extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      showLabels2: false,\n      labelsSelected: [],\n      newLabel: '',\n      newComment: '' // State variable to store selected labels\n    };\n    // Method to handle showing the LabelsComponent\n    this.showLabelsComponent = () => {\n      this.setState({\n        showLabels2: true\n      });\n    };\n    this.handleNewLabelChange = event => {\n      this.setState({\n        newLabel: event.target.value\n      });\n    };\n    // Method to handle selecting/deselecting labels\n    this.handleLabelChange = event => {\n      const {\n        value,\n        checked\n      } = event.target;\n      if (checked) {\n        // If the label is checked, add it to the selected labels\n        this.setState(prevState => ({\n          labelsSelected: [...prevState.labelsSelected, value]\n        }));\n      } else {\n        // If the label is unchecked, remove it from the selected labels\n        this.setState(prevState => ({\n          labelsSelected: prevState.labelsSelected.filter(label => label !== value)\n        }));\n      }\n    };\n    // Method to handle saving the selected labels\n    this.saveLabels = () => {\n      // Process and save the selected labels here\n      // For example, you can store them in the component's state or call a service to save them\n      console.log(this.state.labelsSelected); // Print selected labels for demonstration\n      this.setState({\n        showLabels2: false\n      });\n    };\n    this.addNewLabel = () => {\n      const {\n        newLabel,\n        labelsSelected\n      } = this.state;\n      if (newLabel.trim() !== '') {\n        this.setState({\n          labelsSelected: [...labelsSelected, newLabel],\n          newLabel: ''\n        });\n      }\n    };\n    this.removeLabel = label => {\n      this.setState(prevState => ({\n        labelsSelected: prevState.labelsSelected.filter(l => l !== label)\n      }));\n    };\n    this.handleNewCommentChange = event => {\n      this.setState({\n        newComment: event.target.value\n      });\n    };\n    // Move the LabelsComponent method outside the render method\n    this.LabelsComponent = () => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"labels-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-form-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n            children: \"Choose Labels:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"input-form\",\n            type: \"text\",\n            value: this.state.newLabel,\n            onChange: this.handleNewLabelChange,\n            placeholder: \"Enter a new label\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            className: \"add-label-btn\",\n            variant: \"primary\",\n            onClick: this.addNewLabel,\n            children: \"Add Label\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"label-tags\",\n            children: this.state.labelsSelected.map(label => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"label-tag\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: label\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 123,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"svg\", {\n                xmlns: \"http://www.w3.org/2000/svg\",\n                className: \"bi bi-x\",\n                viewBox: \"0 0 16 16\",\n                onClick: () => this.removeLabel(label),\n                children: /*#__PURE__*/_jsxDEV(\"path\", {\n                  d: \"M5.293 5.293a1 1 0 0 1 1.414 0L8 6.586l1.293-1.293a1 1 0 1 1 1.414 1.414L9.414 8l1.293 1.293a1 1 0 0 1-1.414 1.414L8 9.414l-1.293 1.293a1 1 0 0 1-1.414-1.414L6.586 8 5.293 6.707a1 1 0 0 1 0-1.414z\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 131,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 125,\n                columnNumber: 17\n              }, this)]\n            }, label, true, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 15\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"comments-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n            children: \"Add Comments\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            className: \"comment-input\",\n            value: this.state.newComment,\n            onChange: this.handleNewCommentChange,\n            placeholder: \"Enter a new comment\",\n            rows: 6 // Set the initial number of rows\n            ,\n            cols: 150 // Set the initial number of columns\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          className: \"save-button\",\n          variant: \"primary\",\n          onClick: this.saveLabels,\n          children: \"Save Changes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 7\n      }, this);\n    };\n  }\n  // Add the render method\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: this.state.showLabels2 ?\n      // Call the LabelsComponent method directly\n      this.LabelsComponent() : /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"primary\",\n        onClick: this.showLabelsComponent,\n        children: \"Add Labels\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this);\n  }\n}","map":{"version":3,"names":["React","Button","jsxDEV","_jsxDEV","Label","Component","constructor","arguments","state","showLabels2","labelsSelected","newLabel","newComment","showLabelsComponent","setState","handleNewLabelChange","event","target","value","handleLabelChange","checked","prevState","filter","label","saveLabels","console","log","addNewLabel","trim","removeLabel","l","handleNewCommentChange","LabelsComponent","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","placeholder","variant","onClick","map","xmlns","viewBox","d","rows","cols","render"],"sources":["/Users/maxoliverstapyltonnorris/contenti-mono/client/src/components/LabelsMetadataComponent.tsx"],"sourcesContent":["import React from 'react';\nimport Button from 'react-bootstrap/Button';\nimport './LabelsMetadataComponent.css';\n\ninterface LabelState {\n  showLabels2: boolean;\n  labelsSelected: string[];\n  newLabel: string; // State variable to store selected labels\n  newComment;\n}\n\nexport default class Label extends React.Component<any, LabelState> {\n  state: LabelState = {\n    showLabels2: false,\n    labelsSelected: [],\n    newLabel: '',\n    newComment: '', // State variable to store selected labels\n  };\n\n  // Method to handle showing the LabelsComponent\n  protected showLabelsComponent = () => {\n    this.setState({ showLabels2: true });\n  };\n\n  protected handleNewLabelChange = (\n    event: React.ChangeEvent<HTMLInputElement>\n  ) => {\n    this.setState({ newLabel: event.target.value });\n  };\n\n  // Method to handle selecting/deselecting labels\n  protected handleLabelChange = (\n    event: React.ChangeEvent<HTMLInputElement>\n  ) => {\n    const { value, checked } = event.target;\n    if (checked) {\n      // If the label is checked, add it to the selected labels\n      this.setState((prevState) => ({\n        labelsSelected: [...prevState.labelsSelected, value],\n      }));\n    } else {\n      // If the label is unchecked, remove it from the selected labels\n      this.setState((prevState) => ({\n        labelsSelected: prevState.labelsSelected.filter(\n          (label) => label !== value\n        ),\n      }));\n    }\n  };\n\n  // Method to handle saving the selected labels\n  protected saveLabels = () => {\n    // Process and save the selected labels here\n    // For example, you can store them in the component's state or call a service to save them\n    console.log(this.state.labelsSelected); // Print selected labels for demonstration\n    this.setState({ showLabels2: false });\n  };\n\n  protected addNewLabel = () => {\n    const { newLabel, labelsSelected } = this.state;\n    if (newLabel.trim() !== '') {\n      this.setState({\n        labelsSelected: [...labelsSelected, newLabel],\n        newLabel: '',\n      });\n    }\n  };\n\n  protected removeLabel = (label: string) => {\n    this.setState((prevState) => ({\n      labelsSelected: prevState.labelsSelected.filter((l) => l !== label),\n    }));\n  };\n\n  protected handleNewCommentChange = (\n    event: React.ChangeEvent<HTMLTextAreaElement>\n  ) => {\n    this.setState({ newComment: event.target.value });\n  };\n\n  // Add the render method\n  render() {\n    return (\n      <div>\n        {this.state.showLabels2 ? (\n          // Call the LabelsComponent method directly\n          this.LabelsComponent()\n        ) : (\n          <Button variant=\"primary\" onClick={this.showLabelsComponent}>\n            Add Labels\n          </Button>\n        )}\n      </div>\n    );\n  }\n\n  // Move the LabelsComponent method outside the render method\n  protected LabelsComponent = () => {\n    return (\n      <div className=\"labels-container\">\n        {/* Your label selection component code here */}\n        {/* For example, you can use a form with checkboxes */}\n\n        <div className=\"input-form-container\">\n          <h5>Choose Labels:</h5>\n          <input\n            className=\"input-form\"\n            type=\"text\"\n            value={this.state.newLabel}\n            onChange={this.handleNewLabelChange}\n            placeholder=\"Enter a new label\"\n          />\n          <Button\n            className=\"add-label-btn\"\n            variant=\"primary\"\n            onClick={this.addNewLabel}\n          >\n            Add Label\n          </Button>\n          <div className=\"label-tags\">\n            {this.state.labelsSelected.map((label) => (\n              <div key={label} className=\"label-tag\">\n                <span>{label}</span>\n                {/* Use an SVG icon for the discard cross */}\n                <svg\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  className=\"bi bi-x\"\n                  viewBox=\"0 0 16 16\"\n                  onClick={() => this.removeLabel(label)}\n                >\n                  <path d=\"M5.293 5.293a1 1 0 0 1 1.414 0L8 6.586l1.293-1.293a1 1 0 1 1 1.414 1.414L9.414 8l1.293 1.293a1 1 0 0 1-1.414 1.414L8 9.414l-1.293 1.293a1 1 0 0 1-1.414-1.414L6.586 8 5.293 6.707a1 1 0 0 1 0-1.414z\" />\n                </svg>\n              </div>\n            ))}\n          </div>\n        </div>\n\n        <div className=\"comments-container\">\n          <h5>Add Comments</h5>\n          <textarea\n            className=\"comment-input\"\n            value={this.state.newComment}\n            onChange={this.handleNewCommentChange}\n            placeholder=\"Enter a new comment\"\n            rows={6} // Set the initial number of rows\n            cols={150} // Set the initial number of columns\n          />\n        </div>\n\n        {/* Add more labels as needed */}\n        {/* Add a button to save the labels */}\n        <Button\n          className=\"save-button\"\n          variant=\"primary\"\n          onClick={this.saveLabels}\n        >\n          Save Changes\n        </Button>\n      </div>\n    );\n  };\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
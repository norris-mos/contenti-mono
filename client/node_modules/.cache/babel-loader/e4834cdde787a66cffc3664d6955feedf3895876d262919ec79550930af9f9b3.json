{"ast":null,"code":"var _jsxFileName = \"/Users/maxoliverstapyltonnorris/contenti-mono/client/src/components/LabelsMetadataComponent.tsx\";\nimport React from 'react';\nimport Button from 'react-bootstrap/Button';\nimport './LabelsMetadataComponent.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Label extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      showLabels2: false,\n      labelsSelected: [] // State variable to store selected labels\n    };\n    // Method to handle showing the LabelsComponent\n    this.showLabelsComponent = () => {\n      this.setState({\n        showLabels2: true\n      });\n    };\n    // Method to handle selecting/deselecting labels\n    this.handleLabelChange = event => {\n      const {\n        value,\n        checked\n      } = event.target;\n      if (checked) {\n        // If the label is checked, add it to the selected labels\n        this.setState(prevState => ({\n          labelsSelected: [...prevState.labelsSelected, value]\n        }));\n      } else {\n        // If the label is unchecked, remove it from the selected labels\n        this.setState(prevState => ({\n          labelsSelected: prevState.labelsSelected.filter(label => label !== value)\n        }));\n      }\n    };\n    // Method to handle saving the selected labels\n    this.saveLabels = () => {\n      // Process and save the selected labels here\n      // For example, you can store them in the component's state or call a service to save them\n      console.log(this.state.labelsSelected); // Print selected labels for demonstration\n      this.setState({\n        showLabels2: false\n      });\n    };\n    // Move the LabelsComponent method outside the render method\n    this.LabelsComponent = () => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n          children: \"Choose Labels:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            value: \"label1\",\n            onChange: this.handleLabelChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 11\n          }, this), \"Label 1\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            value: \"label2\",\n            onChange: this.handleLabelChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 11\n          }, this), \"Label 2\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          onClick: this.saveLabels,\n          children: \"Save Labels\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 7\n      }, this);\n    };\n  }\n  // Add the render method\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: this.state.showLabels2 ?\n      // Call the LabelsComponent method directly\n      this.LabelsComponent() : /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"primary\",\n        onClick: this.showLabelsComponent,\n        children: \"Add Labels\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this);\n  }\n}","map":{"version":3,"names":["React","Button","jsxDEV","_jsxDEV","Label","Component","constructor","arguments","state","showLabels2","labelsSelected","showLabelsComponent","setState","handleLabelChange","event","value","checked","target","prevState","filter","label","saveLabels","console","log","LabelsComponent","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","variant","onClick","render"],"sources":["/Users/maxoliverstapyltonnorris/contenti-mono/client/src/components/LabelsMetadataComponent.tsx"],"sourcesContent":["import React from 'react';\nimport Button from 'react-bootstrap/Button';\nimport './LabelsMetadataComponent.css';\n\ninterface LabelState {\n  showLabels2: boolean;\n  labelsSelected: string[];\n  newLabel: string; // State variable to store selected labels\n}\n\nexport default class Label extends React.Component<any, LabelState> {\n  state: LabelState = {\n    showLabels2: false,\n    labelsSelected: [], // State variable to store selected labels\n  };\n\n  // Method to handle showing the LabelsComponent\n  protected showLabelsComponent = () => {\n    this.setState({ showLabels2: true });\n  };\n\n  // Method to handle selecting/deselecting labels\n  protected handleLabelChange = (\n    event: React.ChangeEvent<HTMLInputElement>\n  ) => {\n    const { value, checked } = event.target;\n    if (checked) {\n      // If the label is checked, add it to the selected labels\n      this.setState((prevState) => ({\n        labelsSelected: [...prevState.labelsSelected, value],\n      }));\n    } else {\n      // If the label is unchecked, remove it from the selected labels\n      this.setState((prevState) => ({\n        labelsSelected: prevState.labelsSelected.filter(\n          (label) => label !== value\n        ),\n      }));\n    }\n  };\n\n  // Method to handle saving the selected labels\n  protected saveLabels = () => {\n    // Process and save the selected labels here\n    // For example, you can store them in the component's state or call a service to save them\n    console.log(this.state.labelsSelected); // Print selected labels for demonstration\n    this.setState({ showLabels2: false });\n  };\n\n  // Add the render method\n  render() {\n    return (\n      <div>\n        {this.state.showLabels2 ? (\n          // Call the LabelsComponent method directly\n          this.LabelsComponent()\n        ) : (\n          <Button variant=\"primary\" onClick={this.showLabelsComponent}>\n            Add Labels\n          </Button>\n        )}\n      </div>\n    );\n  }\n\n  // Move the LabelsComponent method outside the render method\n  protected LabelsComponent = () => {\n    return (\n      <div>\n        {/* Your label selection component code here */}\n        {/* For example, you can use a form with checkboxes */}\n        <h5>Choose Labels:</h5>\n        <label>\n          <input\n            type=\"checkbox\"\n            value=\"label1\"\n            onChange={this.handleLabelChange}\n          />\n          Label 1\n        </label>\n        <br />\n        <label>\n          <input\n            type=\"checkbox\"\n            value=\"label2\"\n            onChange={this.handleLabelChange}\n          />\n          Label 2\n        </label>\n        <br />\n        {/* Add more labels as needed */}\n        {/* Add a button to save the labels */}\n        <Button variant=\"primary\" onClick={this.saveLabels}>\n          Save Labels\n        </Button>\n      </div>\n    );\n  };\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import merge from 'deepmerge';\n/**\n * Merges the new IIntegration object with the global one.\n * @param newIntegration\n * @param contentId\n */\nexport function mergeH5PIntegration(newIntegration, contentId) {\n  if (!window.H5PIntegration) {\n    window.H5PIntegration = newIntegration;\n    return;\n  }\n  if (contentId && newIntegration.contents && newIntegration.contents[`cid-${contentId}`]) {\n    if (!window.H5PIntegration.contents) {\n      window.H5PIntegration.contents = {};\n    }\n    window.H5PIntegration.contents[`cid-${contentId}`] = newIntegration.contents[`cid-${contentId}`];\n  }\n  // We don't want to mutate the newIntegration parameter, so we shallow clone\n  // it.\n  const newIntegrationDup = Object.assign({}, newIntegration);\n  // We don't merge content object information, as there might be issues with\n  // this.\n  delete newIntegrationDup.contents;\n  window.H5PIntegration = merge(window.H5PIntegration, newIntegrationDup);\n}\n/**\n * Removes the data about the content from the global H5PIntegration object.\n * @param contentId\n */\nexport function removeUnusedContent(contentId) {\n  var _a;\n  if (((_a = window.H5PIntegration) === null || _a === void 0 ? void 0 : _a.contents) && window.H5PIntegration.contents[`cid-${contentId}`]) {\n    delete window.H5PIntegration.contents[`cid-${contentId}`];\n  }\n}","map":{"version":3,"names":["merge","mergeH5PIntegration","newIntegration","contentId","window","H5PIntegration","contents","newIntegrationDup","Object","assign","removeUnusedContent","_a"],"sources":["/Users/maxoliverstapyltonnorris/contenti-mono/h5p-rest-example-client/node_modules/@lumieducation/h5p-webcomponents/src/h5p-utils.ts"],"sourcesContent":["import merge from 'deepmerge';\nimport type { IIntegration } from '@lumieducation/h5p-server';\n\n/**\n * Merges the new IIntegration object with the global one.\n * @param newIntegration\n * @param contentId\n */\nexport function mergeH5PIntegration(\n    newIntegration: IIntegration,\n    contentId: string\n): void {\n    if (!window.H5PIntegration) {\n        window.H5PIntegration = newIntegration;\n        return;\n    }\n    if (\n        contentId &&\n        newIntegration.contents &&\n        newIntegration.contents[`cid-${contentId}`]\n    ) {\n        if (!window.H5PIntegration.contents) {\n            window.H5PIntegration.contents = {};\n        }\n        window.H5PIntegration.contents[`cid-${contentId}`] =\n            newIntegration.contents[`cid-${contentId}`];\n    }\n\n    // We don't want to mutate the newIntegration parameter, so we shallow clone\n    // it.\n    const newIntegrationDup = { ...newIntegration };\n    // We don't merge content object information, as there might be issues with\n    // this.\n    delete newIntegrationDup.contents;\n\n    window.H5PIntegration = merge(window.H5PIntegration, newIntegrationDup);\n}\n\n/**\n * Removes the data about the content from the global H5PIntegration object.\n * @param contentId\n */\nexport function removeUnusedContent(contentId: string): void {\n    if (\n        window.H5PIntegration?.contents &&\n        window.H5PIntegration.contents[`cid-${contentId}`]\n    ) {\n        delete window.H5PIntegration.contents[`cid-${contentId}`];\n    }\n}\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,WAAW;AAG7B;;;;;AAKA,OAAM,SAAUC,mBAAmBA,CAC/BC,cAA4B,EAC5BC,SAAiB;EAEjB,IAAI,CAACC,MAAM,CAACC,cAAc,EAAE;IACxBD,MAAM,CAACC,cAAc,GAAGH,cAAc;IACtC;;EAEJ,IACIC,SAAS,IACTD,cAAc,CAACI,QAAQ,IACvBJ,cAAc,CAACI,QAAQ,CAAC,OAAOH,SAAS,EAAE,CAAC,EAC7C;IACE,IAAI,CAACC,MAAM,CAACC,cAAc,CAACC,QAAQ,EAAE;MACjCF,MAAM,CAACC,cAAc,CAACC,QAAQ,GAAG,EAAE;;IAEvCF,MAAM,CAACC,cAAc,CAACC,QAAQ,CAAC,OAAOH,SAAS,EAAE,CAAC,GAC9CD,cAAc,CAACI,QAAQ,CAAC,OAAOH,SAAS,EAAE,CAAC;;EAGnD;EACA;EACA,MAAMI,iBAAiB,GAAAC,MAAA,CAAAC,MAAA,KAAQP,cAAc,CAAE;EAC/C;EACA;EACA,OAAOK,iBAAiB,CAACD,QAAQ;EAEjCF,MAAM,CAACC,cAAc,GAAGL,KAAK,CAACI,MAAM,CAACC,cAAc,EAAEE,iBAAiB,CAAC;AAC3E;AAEA;;;;AAIA,OAAM,SAAUG,mBAAmBA,CAACP,SAAiB;;EACjD,IACI,EAAAQ,EAAA,GAAAP,MAAM,CAACC,cAAc,cAAAM,EAAA,uBAAAA,EAAA,CAAEL,QAAQ,KAC/BF,MAAM,CAACC,cAAc,CAACC,QAAQ,CAAC,OAAOH,SAAS,EAAE,CAAC,EACpD;IACE,OAAOC,MAAM,CAACC,cAAc,CAACC,QAAQ,CAAC,OAAOH,SAAS,EAAE,CAAC;;AAEjE"},"metadata":{},"sourceType":"module","externalDependencies":[]}
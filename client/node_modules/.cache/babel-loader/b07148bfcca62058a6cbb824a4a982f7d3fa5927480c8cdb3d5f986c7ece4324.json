{"ast":null,"code":"var _jsxFileName = \"/Users/maxoliverstapyltonnorris/contenti-mono/client/src/components/Login.tsx\";\nimport React from 'react';\nimport Alert from 'react-bootstrap/Alert';\nimport { Button, Col, Dropdown, Row } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Login extends React.Component {\n  constructor(props) {\n    super(props);\n    this.login = username => {\n      fetch('http://localhost:8080/login', {\n        method: 'POST',\n        headers: {\n          Accept: 'application/json, text/plain, */*',\n          'Content-type': 'application/json'\n        },\n        body: JSON.stringify({\n          username: username,\n          password: username\n        })\n      }).then(async res => {\n        if (res.status === 200) {\n          const loginData = await res.json();\n          this.setState({\n            ...this.state,\n            loginData,\n            loginMessage: undefined\n          });\n          if (loginData.csrfToken) {\n            this.props.contentService.setCsrfToken(loginData.csrfToken);\n            console.log(loginData.csrfToken);\n          }\n        } else {\n          console.log('Login failed');\n          this.setState({\n            ...this.state,\n            loginData: undefined,\n            loginMessage: await res.text()\n          });\n          this.props.contentService.setCsrfToken(undefined);\n        }\n      }).catch(reason => {\n        this.setState({\n          ...this.state,\n          loginData: undefined,\n          loginMessage: reason\n        });\n        this.props.contentService.setCsrfToken(undefined);\n      });\n    };\n    this.logout = () => {\n      var _this$props$contentSe;\n      fetch('http://localhost:8080/logout', {\n        method: 'POST',\n        headers: {\n          Accept: 'application/json, text/plain, */*',\n          'Content-type': 'application/json',\n          'CSRF-Token': (_this$props$contentSe = this.props.contentService.getCsrfToken()) !== null && _this$props$contentSe !== void 0 ? _this$props$contentSe : ''\n        },\n        body: JSON.stringify({})\n      }).then(() => {\n        this.setState({\n          ...this.state,\n          loginData: undefined,\n          loginMessage: undefined\n        });\n        this.props.contentService.setCsrfToken(undefined);\n      }).catch(reason => {\n        this.setState({\n          ...this.state,\n          loginData: undefined,\n          loginMessage: `Error logging out: ${reason}`\n        });\n        this.props.contentService.setCsrfToken(undefined);\n      });\n    };\n    this.state = {};\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [!this.state.loginData ? /*#__PURE__*/_jsxDEV(Dropdown, {\n        children: [/*#__PURE__*/_jsxDEV(Dropdown.Toggle, {\n          variant: \"success\",\n          id: \"dropdown-basic\",\n          children: \"Login as\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Dropdown.Menu, {\n          children: [/*#__PURE__*/_jsxDEV(Dropdown.Item, {\n            onClick: () => this.login('teacher1'),\n            children: \"Teacher 1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n            onClick: () => this.login('teacher2'),\n            children: \"Teacher 2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n            onClick: () => this.login('student1'),\n            children: \"Student 1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n            onClick: () => this.login('student2'),\n            children: \"Student 2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(Row, {\n        className: \"align-items-center\",\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          children: this.state.loginData.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            onClick: this.logout,\n            children: \"Logout\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 11\n      }, this), this.state.loginMessage && /*#__PURE__*/_jsxDEV(Alert, {\n        variant: \"error\",\n        children: this.state.loginMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this);\n  }\n}","map":{"version":3,"names":["React","Alert","Button","Col","Dropdown","Row","jsxDEV","_jsxDEV","Login","Component","constructor","props","login","username","fetch","method","headers","Accept","body","JSON","stringify","password","then","res","status","loginData","json","setState","state","loginMessage","undefined","csrfToken","contentService","setCsrfToken","console","log","text","catch","reason","logout","_this$props$contentSe","getCsrfToken","render","Fragment","children","Toggle","variant","id","fileName","_jsxFileName","lineNumber","columnNumber","Menu","Item","onClick","className","name"],"sources":["/Users/maxoliverstapyltonnorris/contenti-mono/client/src/components/Login.tsx"],"sourcesContent":["import React from 'react';\nimport Alert from 'react-bootstrap/Alert';\nimport { Button, Col, Dropdown, Row } from 'react-bootstrap';\n\nimport { ContentService } from '../services/ContentService';\n\nexport default class Login extends React.Component<\n  { contentService: ContentService },\n  {\n    loginData?: {\n      username: string;\n      name: string;\n      email: string;\n      csrfToken: string;\n    };\n    loginMessage?: string;\n  }\n> {\n  constructor(props: any) {\n    super(props);\n    this.state = {};\n  }\n\n  private login = (username: any) => {\n    fetch('http://localhost:8080/login', {\n      method: 'POST',\n      headers: {\n        Accept: 'application/json, text/plain, */*',\n        'Content-type': 'application/json',\n      },\n      body: JSON.stringify({\n        username: username,\n        password: username,\n      }),\n    })\n      .then(async (res) => {\n        if (res.status === 200) {\n          const loginData = await res.json();\n          this.setState({\n            ...this.state,\n            loginData,\n            loginMessage: undefined,\n          });\n          if (loginData.csrfToken) {\n            this.props.contentService.setCsrfToken(loginData.csrfToken);\n            console.log(loginData.csrfToken);\n          }\n        } else {\n          console.log('Login failed');\n          this.setState({\n            ...this.state,\n            loginData: undefined,\n            loginMessage: await res.text(),\n          });\n          this.props.contentService.setCsrfToken(undefined);\n        }\n      })\n      .catch((reason) => {\n        this.setState({\n          ...this.state,\n          loginData: undefined,\n          loginMessage: reason,\n        });\n        this.props.contentService.setCsrfToken(undefined);\n      });\n  };\n\n  logout = () => {\n    fetch('http://localhost:8080/logout', {\n      method: 'POST',\n      headers: {\n        Accept: 'application/json, text/plain, */*',\n        'Content-type': 'application/json',\n        'CSRF-Token': this.props.contentService.getCsrfToken() ?? '',\n      },\n      body: JSON.stringify({}),\n    })\n      .then(() => {\n        this.setState({\n          ...this.state,\n          loginData: undefined,\n          loginMessage: undefined,\n        });\n        this.props.contentService.setCsrfToken(undefined);\n      })\n      .catch((reason) => {\n        this.setState({\n          ...this.state,\n          loginData: undefined,\n          loginMessage: `Error logging out: ${reason}`,\n        });\n        this.props.contentService.setCsrfToken(undefined);\n      });\n  };\n\n  render() {\n    return (\n      <React.Fragment>\n        {!this.state.loginData ? (\n          <Dropdown>\n            <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\">\n              Login as\n            </Dropdown.Toggle>\n            <Dropdown.Menu>\n              <Dropdown.Item onClick={() => this.login('teacher1')}>\n                Teacher 1\n              </Dropdown.Item>\n              <Dropdown.Item onClick={() => this.login('teacher2')}>\n                Teacher 2\n              </Dropdown.Item>\n              <Dropdown.Item onClick={() => this.login('student1')}>\n                Student 1\n              </Dropdown.Item>\n              <Dropdown.Item onClick={() => this.login('student2')}>\n                Student 2\n              </Dropdown.Item>\n            </Dropdown.Menu>\n          </Dropdown>\n        ) : (\n          <Row className=\"align-items-center\">\n            <Col>{this.state.loginData.name}</Col>\n            <Col>\n              <Button onClick={this.logout}>Logout</Button>\n            </Col>\n          </Row>\n        )}\n        {this.state.loginMessage && (\n          <Alert variant=\"error\">{this.state.loginMessage}</Alert>\n        )}\n      </React.Fragment>\n    );\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"/Users/maxoliverstapyltonnorris/contenti-mono/client/src/components/LabelsMetadataComponent.tsx\";\nimport React from 'react';\nimport Button from 'react-bootstrap/Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Label extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      showLabels2: false,\n      labelsSelected: [] // State variable to store selected labels\n    };\n    this.LabelsComponent = () => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n          children: \"Choose Labels:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            value: \"label1\",\n            onChange: this.handleLabelChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 11\n          }, this), \"Label 1\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            value: \"label2\",\n            onChange: this.handleLabelChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 11\n          }, this), \"Label 2\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          onClick: this.saveLabels,\n          children: \"Save Labels\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 7\n      }, this);\n    };\n    // Method to handle showing the LabelsComponent\n    this.showLabelsComponent = () => {\n      this.setState({\n        showLabels2: true\n      });\n    };\n    // Method to handle selecting/deselecting labels\n    this.handleLabelChange = event => {\n      const {\n        value,\n        checked\n      } = event.target;\n      if (checked) {\n        // If the label is checked, add it to the selected labels\n        this.setState(prevState => ({\n          labelsSelected: [...prevState.labelsSelected, value]\n        }));\n      } else {\n        // If the label is unchecked, remove it from the selected labels\n        this.setState(prevState => ({\n          labelsSelected: prevState.labelsSelected.filter(label => label !== value)\n        }));\n      }\n    };\n    // Method to handle saving the selected labels\n    this.saveLabels = () => {\n      // Process and save the selected labels here\n      // For example, you can store them in the component's state or call a service to save them\n      console.log(this.state.labelsSelected); // Print selected labels for demonstration\n      this.setState({\n        showLabels2: false\n      });\n    };\n  }\n}","map":{"version":3,"names":["React","Button","jsxDEV","_jsxDEV","Label","Component","constructor","arguments","state","showLabels2","labelsSelected","LabelsComponent","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","handleLabelChange","variant","onClick","saveLabels","showLabelsComponent","setState","event","checked","target","prevState","filter","label","console","log"],"sources":["/Users/maxoliverstapyltonnorris/contenti-mono/client/src/components/LabelsMetadataComponent.tsx"],"sourcesContent":["import React from 'react';\nimport Button from 'react-bootstrap/Button';\n\ninterface LabelState {\n  showLabels2: boolean;\n  labelsSelected: string[]; // State variable to store selected labels\n}\n\nexport default class Label extends React.Component<any, LabelState> {\n  state: LabelState = {\n    showLabels2: false,\n    labelsSelected: [], // State variable to store selected labels\n  };\n\n  protected LabelsComponent = () => {\n    return (\n      <div>\n        {/* Your label selection component code here */}\n        {/* For example, you can use a form with checkboxes */}\n        <h5>Choose Labels:</h5>\n        <label>\n          <input\n            type=\"checkbox\"\n            value=\"label1\"\n            onChange={this.handleLabelChange}\n          />\n          Label 1\n        </label>\n        <br />\n        <label>\n          <input\n            type=\"checkbox\"\n            value=\"label2\"\n            onChange={this.handleLabelChange}\n          />\n          Label 2\n        </label>\n        <br />\n        {/* Add more labels as needed */}\n        {/* Add a button to save the labels */}\n        <Button variant=\"primary\" onClick={this.saveLabels}>\n          Save Labels\n        </Button>\n      </div>\n    );\n  };\n\n  // Method to handle showing the LabelsComponent\n  protected showLabelsComponent = () => {\n    this.setState({ showLabels2: true });\n  };\n\n  // Method to handle selecting/deselecting labels\n  protected handleLabelChange = (\n    event: React.ChangeEvent<HTMLInputElement>\n  ) => {\n    const { value, checked } = event.target;\n    if (checked) {\n      // If the label is checked, add it to the selected labels\n      this.setState((prevState) => ({\n        labelsSelected: [...prevState.labelsSelected, value],\n      }));\n    } else {\n      // If the label is unchecked, remove it from the selected labels\n      this.setState((prevState) => ({\n        labelsSelected: prevState.labelsSelected.filter(\n          (label) => label !== value\n        ),\n      }));\n    }\n  };\n\n  // Method to handle saving the selected labels\n  protected saveLabels = () => {\n    // Process and save the selected labels here\n    // For example, you can store them in the component's state or call a service to save them\n    console.log(this.state.labelsSelected); // Print selected labels for demonstration\n    this.setState({ showLabels2: false });\n  };\n}\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAO5C,eAAe,MAAMC,KAAK,SAASJ,KAAK,CAACK,SAAS,CAAkB;EAAAC,YAAA;IAAA,SAAAC,SAAA;IAAA,KAClEC,KAAK,GAAe;MAClBC,WAAW,EAAE,KAAK;MAClBC,cAAc,EAAE,EAAE,CAAE;IACtB,CAAC;IAAA,KAESC,eAAe,GAAG,MAAM;MAChC,oBACER,OAAA;QAAAS,QAAA,gBAGET,OAAA;UAAAS,QAAA,EAAI;QAAc;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACvBb,OAAA;UAAAS,QAAA,gBACET,OAAA;YACEc,IAAI,EAAC,UAAU;YACfC,KAAK,EAAC,QAAQ;YACdC,QAAQ,EAAE,IAAI,CAACC;UAAkB;YAAAP,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAClC,CAAC,WAEJ;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACRb,OAAA;UAAAU,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACNb,OAAA;UAAAS,QAAA,gBACET,OAAA;YACEc,IAAI,EAAC,UAAU;YACfC,KAAK,EAAC,QAAQ;YACdC,QAAQ,EAAE,IAAI,CAACC;UAAkB;YAAAP,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAClC,CAAC,WAEJ;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACRb,OAAA;UAAAU,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eAGNb,OAAA,CAACF,MAAM;UAACoB,OAAO,EAAC,SAAS;UAACC,OAAO,EAAE,IAAI,CAACC,UAAW;UAAAX,QAAA,EAAC;QAEpD;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC;IAEV,CAAC;IAED;IAAA,KACUQ,mBAAmB,GAAG,MAAM;MACpC,IAAI,CAACC,QAAQ,CAAC;QAAEhB,WAAW,EAAE;MAAK,CAAC,CAAC;IACtC,CAAC;IAED;IAAA,KACUW,iBAAiB,GACzBM,KAA0C,IACvC;MACH,MAAM;QAAER,KAAK;QAAES;MAAQ,CAAC,GAAGD,KAAK,CAACE,MAAM;MACvC,IAAID,OAAO,EAAE;QACX;QACA,IAAI,CAACF,QAAQ,CAAEI,SAAS,KAAM;UAC5BnB,cAAc,EAAE,CAAC,GAAGmB,SAAS,CAACnB,cAAc,EAAEQ,KAAK;QACrD,CAAC,CAAC,CAAC;MACL,CAAC,MAAM;QACL;QACA,IAAI,CAACO,QAAQ,CAAEI,SAAS,KAAM;UAC5BnB,cAAc,EAAEmB,SAAS,CAACnB,cAAc,CAACoB,MAAM,CAC5CC,KAAK,IAAKA,KAAK,KAAKb,KACvB;QACF,CAAC,CAAC,CAAC;MACL;IACF,CAAC;IAED;IAAA,KACUK,UAAU,GAAG,MAAM;MAC3B;MACA;MACAS,OAAO,CAACC,GAAG,CAAC,IAAI,CAACzB,KAAK,CAACE,cAAc,CAAC,CAAC,CAAC;MACxC,IAAI,CAACe,QAAQ,CAAC;QAAEhB,WAAW,EAAE;MAAM,CAAC,CAAC;IACvC,CAAC;EAAA;AACH"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"/Users/maxoliverstapyltonnorris/H5P-Nodejs-library/packages/h5p-rest-example-client/src/components/ContentListComponent.tsx\";\nimport React from 'react';\nimport Button from 'react-bootstrap/Button';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlusCircle } from '@fortawesome/free-solid-svg-icons';\n\n// The .js references are necessary for requireJs to work in the browser.\n\nimport ContentListEntryComponent from './ContentListEntryComponent';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class ContentList extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = void 0;\n    this.contentService = void 0;\n    /**\n     * Keeps track of newly created content to assign a key\n     * @memberof ContentList\n     */\n    this.newCounter = 0;\n    this.state = {\n      contentList: []\n    };\n    this.contentService = props.contentService;\n  }\n  async componentDidMount() {\n    await this.updateList();\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        variant: \"primary\",\n        onClick: () => this.new(),\n        className: \"my-2\",\n        children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          icon: faPlusCircle,\n          className: \"me-2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }, this), \"Create new content\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ListGroup, {\n        children: this.state.contentList.map(content => {\n          var _content$originalNewK;\n          return /*#__PURE__*/_jsxDEV(ContentListEntryComponent, {\n            contentService: this.contentService,\n            data: content,\n            onDiscard: () => this.onDiscard(content),\n            onDelete: () => this.onDelete(content),\n            onSaved: newData => this.onSaved(content, newData),\n            generateDownloadLink: this.contentService.generateDownloadLink\n          }, (_content$originalNewK = content.originalNewKey) !== null && _content$originalNewK !== void 0 ? _content$originalNewK : content.contentId, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 25\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this);\n  }\n  async updateList() {\n    const contentList = await this.contentService.list();\n    this.setState({\n      contentList\n    });\n  }\n  new() {\n    this.setState({\n      contentList: [{\n        contentId: 'new',\n        mainLibrary: undefined,\n        title: 'New H5P',\n        originalNewKey: `new-${this.newCounter++}`\n      }, ...this.state.contentList]\n    });\n  }\n  onDiscard(content) {\n    this.setState({\n      contentList: this.state.contentList.filter(c => c !== content)\n    });\n  }\n  async onDelete(content) {\n    if (!content.contentId) {\n      return;\n    }\n    try {\n      await this.contentService.delete(content.contentId);\n      this.setState({\n        contentList: this.state.contentList.filter(c => c !== content)\n      });\n    } catch (error) {\n      if (error instanceof Error) {\n        console.error(error.message);\n      }\n    }\n  }\n  async onSaved(oldData, newData) {\n    this.setState({\n      contentList: this.state.contentList.map(c => c === oldData ? newData : c)\n    });\n  }\n}","map":{"version":3,"names":["React","Button","ListGroup","FontAwesomeIcon","faPlusCircle","ContentListEntryComponent","jsxDEV","_jsxDEV","ContentList","Component","constructor","props","state","contentService","newCounter","contentList","componentDidMount","updateList","render","children","variant","onClick","new","className","icon","fileName","_jsxFileName","lineNumber","columnNumber","map","content","_content$originalNewK","data","onDiscard","onDelete","onSaved","newData","generateDownloadLink","originalNewKey","contentId","list","setState","mainLibrary","undefined","title","filter","c","delete","error","Error","console","message","oldData"],"sources":["/Users/maxoliverstapyltonnorris/H5P-Nodejs-library/packages/h5p-rest-example-client/src/components/ContentListComponent.tsx"],"sourcesContent":["import React from 'react';\nimport Button from 'react-bootstrap/Button';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlusCircle } from '@fortawesome/free-solid-svg-icons';\n\n// The .js references are necessary for requireJs to work in the browser.\nimport { IContentService, IContentListEntry } from '../services/ContentService';\nimport ContentListEntryComponent from './ContentListEntryComponent';\n\nexport default class ContentList extends React.Component<{\n    contentService: IContentService;\n}> {\n    constructor(props: { contentService: IContentService }) {\n        super(props);\n\n        this.state = { contentList: [] };\n        this.contentService = props.contentService;\n    }\n\n    public state: {\n        contentList: IContentListEntry[];\n    };\n\n    protected contentService: IContentService;\n    /**\n     * Keeps track of newly created content to assign a key\n     * @memberof ContentList\n     */\n    protected newCounter = 0;\n\n    public async componentDidMount(): Promise<void> {\n        await this.updateList();\n    }\n\n    public render(): React.ReactNode {\n        return (\n            <div>\n                <Button\n                    variant=\"primary\"\n                    onClick={() => this.new()}\n                    className=\"my-2\"\n                >\n                    <FontAwesomeIcon icon={faPlusCircle} className=\"me-2\" />\n                    Create new content\n                </Button>\n                <ListGroup>\n                    {this.state.contentList.map((content) => (\n                        <ContentListEntryComponent\n                            contentService={this.contentService}\n                            data={content}\n                            key={content.originalNewKey ?? content.contentId}\n                            onDiscard={() => this.onDiscard(content)}\n                            onDelete={() => this.onDelete(content)}\n                            onSaved={(newData) =>\n                                this.onSaved(content, newData)\n                            }\n                            generateDownloadLink={\n                                this.contentService.generateDownloadLink\n                            }\n                        ></ContentListEntryComponent>\n                    ))}\n                </ListGroup>\n            </div>\n        );\n    }\n\n    protected async updateList(): Promise<void> {\n        const contentList = await this.contentService.list();\n        this.setState({ contentList });\n    }\n\n    protected new() {\n        this.setState({\n            contentList: [\n                {\n                    contentId: 'new',\n                    mainLibrary: undefined,\n                    title: 'New H5P',\n                    originalNewKey: `new-${this.newCounter++}`\n                },\n                ...this.state.contentList\n            ]\n        });\n    }\n\n    protected onDiscard(content) {\n        this.setState({\n            contentList: this.state.contentList.filter((c) => c !== content)\n        });\n    }\n\n    protected async onDelete(content: IContentListEntry) {\n        if (!content.contentId) {\n            return;\n        }\n        try {\n            await this.contentService.delete(content.contentId);\n            this.setState({\n                contentList: this.state.contentList.filter((c) => c !== content)\n            });\n        } catch (error) {\n            if (error instanceof Error) {\n                console.error(error.message);\n            }\n        }\n    }\n\n    protected async onSaved(\n        oldData: IContentListEntry,\n        newData: IContentListEntry\n    ) {\n        this.setState({\n            contentList: this.state.contentList.map((c) =>\n                c === oldData ? newData : c\n            )\n        });\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
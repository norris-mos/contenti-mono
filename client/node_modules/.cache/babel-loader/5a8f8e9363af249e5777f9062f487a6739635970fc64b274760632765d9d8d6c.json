{"ast":null,"code":"import _regeneratorRuntime from \"/Users/maxoliverstapyltonnorris/H5P-Nodejs-library/packages/h5p-rest-example-client/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/Users/maxoliverstapyltonnorris/H5P-Nodejs-library/packages/h5p-rest-example-client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _classCallCheck from \"/Users/maxoliverstapyltonnorris/H5P-Nodejs-library/packages/h5p-rest-example-client/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/maxoliverstapyltonnorris/H5P-Nodejs-library/packages/h5p-rest-example-client/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"/Users/maxoliverstapyltonnorris/H5P-Nodejs-library/packages/h5p-rest-example-client/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/maxoliverstapyltonnorris/H5P-Nodejs-library/packages/h5p-rest-example-client/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport _wrapNativeSuper from \"/Users/maxoliverstapyltonnorris/H5P-Nodejs-library/packages/h5p-rest-example-client/node_modules/@babel/runtime/helpers/esm/wrapNativeSuper.js\";\nimport { mergeH5PIntegration } from './h5p-utils';\nimport { addScripts } from './dom-utils';\nexport var H5PEditorComponent = /*#__PURE__*/function (_HTMLElement) {\n  _inherits(H5PEditorComponent, _HTMLElement);\n  var _super = _createSuper(H5PEditorComponent);\n  function H5PEditorComponent() {\n    var _this;\n    _classCallCheck(this, H5PEditorComponent);\n    _this = _super.call(this);\n    /**\n     * Call this method when the iframe containing the editor needs to be\n     * resized, e.g. because the some\n     */\n    _this.resize = function () {\n      var _a, _b, _c;\n      var h5pEditorIframe = _this.querySelector('.h5p-editor-iframe');\n      if (h5pEditorIframe) {\n        var newHeight = (_c = (_b = (_a = h5pEditorIframe.contentWindow) === null || _a === void 0 ? void 0 : _a.document) === null || _b === void 0 ? void 0 : _b.body) === null || _c === void 0 ? void 0 : _c.scrollHeight;\n        if (newHeight !== undefined) {\n          h5pEditorIframe.style.height = \"\".concat(h5pEditorIframe.contentWindow.document.body.scrollHeight.toString(), \"px\");\n        }\n      }\n    };\n    /**\n     * Call save() to get data from the H5P editor and send it to the server.\n     * You can use the saveContentCallback hook to customize server requests.\n     * The component emits 'saved', 'save-error' and 'validation-error' events,\n     * depending on success of the function. You can subscribe to those or use\n     * the promise's return value and catch the errors in a try-catch block.\n     * @throws an error if something went wrong\n     * @returns the contentId and metadata of the saved content\n     */\n    _this.save = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n      var params, content, saveResponseObject, requestBody;\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            if (_this.editorInstance === undefined) {\n              _this.dispatchAndThrowError('save-error', 'editorInstance of h5p editor not defined.');\n            }\n            if (!_this.saveContentCallback) {\n              _this.dispatchAndThrowError('save-error', 'saveContentCallback of H5P Editor Web Component not defined.');\n            }\n            // Get parameters (and also validates them as a side effect)\n            params = _this.editorInstance.getParams();\n            if (!params.params) {\n              _this.dispatchAndThrowError('validation-error', 'The parameters entered by the user are invalid.');\n            }\n            // Validate mandatory main title. Prevent submitting if that's not set.\n            // Deliberately doing it after getParams(), so that any other validation\n            // problems are also revealed.\n            if (!_this.editorInstance.isMainTitleSet()) {\n              _this.dispatchAndThrowError('validation-error', \"The main title of the content hasn't been set.\");\n            }\n            _context.prev = 5;\n            _context.next = 8;\n            return new Promise(function (res, rej) {\n              // By calling getContent we also upgrade the content (this\n              // is an unexpected side effect)\n              _this.editorInstance.getContent(function (c) {\n                res(c);\n              }, function (err) {\n                rej(err);\n              });\n            });\n          case 8:\n            content = _context.sent;\n            _context.next = 14;\n            break;\n          case 11:\n            _context.prev = 11;\n            _context.t0 = _context[\"catch\"](5);\n            _this.dispatchAndThrowError('validation-error', _context.t0.toString());\n          case 14:\n            requestBody = {\n              library: content.library,\n              params: JSON.parse(content.params)\n            };\n            _context.prev = 15;\n            _context.next = 18;\n            return _this.saveContentCallback(_this.contentId === 'new' ? undefined : _this.contentId, requestBody);\n          case 18:\n            saveResponseObject = _context.sent;\n            _context.next = 24;\n            break;\n          case 21:\n            _context.prev = 21;\n            _context.t1 = _context[\"catch\"](15);\n            _this.dispatchAndThrowError('save-error', _context.t1.message);\n          case 24:\n            if (_this.contentId !== saveResponseObject.contentId) {\n              _this.setAttribute('content-id', saveResponseObject.contentId);\n            }\n            _this.dispatchEvent(new CustomEvent('saved', {\n              detail: {\n                contentId: saveResponseObject.contentId,\n                metadata: saveResponseObject.metadata\n              }\n            }));\n            return _context.abrupt(\"return\", saveResponseObject);\n          case 27:\n          case \"end\":\n            return _context.stop();\n        }\n      }, _callee, null, [[5, 11], [15, 21]]);\n    }));\n    /**\n     * Called by the global H5P event dispatcher when any editor was loaded.\n     */\n    _this.onEditorLoaded = function (event) {\n      var _a;\n      // We must manually check if our editor instance is initialized, as the\n      // event is only sent globally.\n      if (_this.editorInstance.selector.form) {\n        _this.dispatchEvent(new CustomEvent('editorloaded', {\n          detail: {\n            contentId: _this.contentId,\n            ubername: event.data\n          }\n        }));\n        // After our editor has been initialized, it will never fire the\n        // global event again, so we can unsubscribe from it.\n        if ((_a = window.H5P) === null || _a === void 0 ? void 0 : _a.externalDispatcher) {\n          window.H5P.externalDispatcher.off('editorloaded', _this.onEditorLoaded);\n        }\n      }\n    };\n    H5PEditorComponent.initTemplate();\n    return _this;\n  }\n  _createClass(H5PEditorComponent, [{\n    key: \"contentId\",\n    get: function get() {\n      var _a;\n      return (_a = this.getAttribute('content-id')) !== null && _a !== void 0 ? _a : undefined;\n    },\n    set: function set(contentId) {\n      if (!contentId) {\n        this.removeAttribute('content-id');\n      } else {\n        this.setAttribute('content-id', contentId);\n      }\n    }\n    /**\n     * Called when the component needs to load data about content. The endpoint\n     * called in here combines the results of H5PEditor.render(...) and\n     * H5PEditor.getContent(...) to avoid too many requests.\n     *\n     * Note that the library, metadata and params property of the returned\n     * object must only be defined if contentId is defined.\n     *\n     * Should throw an error with a message in the message property if something\n     * goes wrong.\n     */\n  }, {\n    key: \"loadContentCallback\",\n    get: function get() {\n      return this.privateLoadContentCallback;\n    },\n    set: function set(callback) {\n      // We only (re-)render the component if the callback was really changed.\n      var mustRender = this.privateLoadContentCallback !== callback;\n      this.privateLoadContentCallback = callback;\n      if (mustRender) {\n        this.render(this.contentId);\n      }\n    }\n    /**\n     * Indicates changes to which attributes should trigger calls to\n     * attributeChangedCallback.\n     */\n  }, {\n    key: \"attributeChangedCallback\",\n    value:\n    /**\n     * Called when one of the attributes in observedAttributes changes.\n     */\n    function () {\n      var _attributeChangedCallback = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(name, oldVal, newVal) {\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              if (!(name === 'content-id' && oldVal !== newVal && oldVal !== 'new')) {\n                _context2.next = 3;\n                break;\n              }\n              _context2.next = 3;\n              return this.render(newVal);\n            case 3:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2, this);\n      }));\n      function attributeChangedCallback(_x, _x2, _x3) {\n        return _attributeChangedCallback.apply(this, arguments);\n      }\n      return attributeChangedCallback;\n    }()\n    /**\n     * Called when the component is added to the DOM.\n     */\n  }, {\n    key: \"connectedCallback\",\n    value: function () {\n      var _connectedCallback = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n        var _this2 = this;\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) switch (_context3.prev = _context3.next) {\n            case 0:\n              this.appendChild(H5PEditorComponent.template.content.cloneNode(true));\n              this.root = this.querySelector('.h5p-editor-component-root');\n              this.resizeObserver = new ResizeObserver(function () {\n                _this2.resize();\n              });\n              this.resizeObserver.observe(this);\n              _context3.next = 6;\n              return this.render(this.contentId);\n            case 6:\n            case \"end\":\n              return _context3.stop();\n          }\n        }, _callee3, this);\n      }));\n      function connectedCallback() {\n        return _connectedCallback.apply(this, arguments);\n      }\n      return connectedCallback;\n    }()\n    /**\n     * Called when the component is removed from the DOM.\n     */\n  }, {\n    key: \"disconnectedCallback\",\n    value: function disconnectedCallback() {\n      var _a;\n      if (this.resizeObserver) {\n        this.resizeObserver.disconnect();\n        this.resizeObserver = null;\n      }\n      // Unregister our event listener from the global H5P dispatcher.\n      if ((_a = window.H5P) === null || _a === void 0 ? void 0 : _a.externalDispatcher) {\n        window.H5P.externalDispatcher.off('editorloaded', this.onEditorLoaded);\n      }\n    }\n    /**\n     * Dispatches an event of the specified name and throws an error whose error\n     * message starts with the eventName.\n     * @param eventName\n     * @param message\n     */\n  }, {\n    key: \"dispatchAndThrowError\",\n    value: function dispatchAndThrowError(eventName, message) {\n      this.dispatchEvent(new CustomEvent(eventName, {\n        detail: {\n          message: message\n        }\n      }));\n      throw new Error(\"\".concat(eventName, \": \").concat(message));\n    }\n    /**\n     * Displays the editor inside the component by creating a new DOM tree.\n     * @param contentId the content id to display or undefined if a new piece\n     * of content was created\n     */\n  }, {\n    key: \"render\",\n    value: function () {\n      var _render = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4(contentId) {\n        var editorModel, h5pCreateDiv, h5pEditorDiv;\n        return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n          while (1) switch (_context4.prev = _context4.next) {\n            case 0:\n              if (this.loadContentCallback) {\n                _context4.next = 2;\n                break;\n              }\n              return _context4.abrupt(\"return\");\n            case 2:\n              if (contentId) {\n                _context4.next = 4;\n                break;\n              }\n              return _context4.abrupt(\"return\");\n            case 4:\n              _context4.prev = 4;\n              _context4.next = 7;\n              return this.loadContentCallback(contentId === 'new' ? undefined : contentId);\n            case 7:\n              editorModel = _context4.sent;\n              _context4.next = 14;\n              break;\n            case 10:\n              _context4.prev = 10;\n              _context4.t0 = _context4[\"catch\"](4);\n              this.root.innerHTML = \"<p>Error loading H5P content from server: \".concat(_context4.t0.message);\n              return _context4.abrupt(\"return\");\n            case 14:\n              // Reset DOM tree inside component.\n              this.root.innerHTML = '';\n              // We have to prevent H5P from initializing when the h5p.js file is\n              // loaded.\n              if (!window.H5P) {\n                window.H5P = {};\n              }\n              window.H5P.preventInit = true;\n              // We merge the H5P integration we received from the server with the one\n              // that already exists in the window globally to allow for several H5P\n              // content objects on a single page.\n              mergeH5PIntegration(editorModel.integration, contentId === 'new' ? undefined : contentId);\n              // As the editor adds an iframe anyway and styles don't really matter, we\n              // only add the global editor scripts to the whole page, but not the styles\n              // (to avoid side effects).\n              _context4.next = 20;\n              return addScripts(editorModel.scripts, document.getElementsByTagName('head')[0]);\n            case 20:\n              // Create the necessary DOM tree.\n              h5pCreateDiv = document.createElement('div');\n              h5pCreateDiv.className = 'h5p-create';\n              h5pCreateDiv.hidden = true;\n              this.root.appendChild(h5pCreateDiv);\n              h5pEditorDiv = document.createElement('div');\n              h5pEditorDiv.className = 'h5p-editor';\n              h5pCreateDiv.appendChild(h5pEditorDiv);\n              // Set up the H5P core editor.\n              H5PEditor.getAjaxUrl = function (action, parameters) {\n                var url = editorModel.integration.editor.ajaxPath + action;\n                if (parameters !== undefined) {\n                  for (var property in parameters) {\n                    if (Object.prototype.hasOwnProperty.call(parameters, property)) {\n                      url = \"\".concat(url, \"&\").concat(property, \"=\").concat(parameters[property]);\n                    }\n                  }\n                }\n                url += window.location.search.replace(/\\\\?/g, '&');\n                return url;\n              };\n              window.H5P.preventInit = false;\n              // Only initialize H5P once to avoid resetting values.\n              if (!window.h5pIsInitialized) {\n                window.H5P.init(this.root);\n                window.h5pIsInitialized = true;\n              }\n              // Register our global editorloaded event handler.\n              if (window.H5P.externalDispatcher) {\n                window.H5P.externalDispatcher.on('editorloaded', this.onEditorLoaded, this);\n              }\n              // Configure the H5P core editor.\n              H5PEditor.$ = window.H5P.jQuery;\n              H5PEditor.basePath = editorModel.integration.editor.libraryUrl;\n              H5PEditor.fileIcon = editorModel.integration.editor.fileIcon;\n              H5PEditor.ajaxPath = editorModel.integration.editor.ajaxPath;\n              H5PEditor.filesPath = editorModel.integration.editor.filesPath;\n              H5PEditor.apiVersion = editorModel.integration.editor.apiVersion;\n              H5PEditor.contentLanguage = editorModel.integration.editor.language;\n              H5PEditor.copyrightSemantics = editorModel.integration.editor.copyrightSemantics;\n              H5PEditor.metadataSemantics = editorModel.integration.editor.metadataSemantics;\n              H5PEditor.assets = editorModel.integration.editor.assets;\n              H5PEditor.baseUrl = '';\n              H5PEditor.contentId = contentId === 'new' ? undefined : contentId;\n              H5PEditor.enableContentHub = editorModel.integration.editor.enableContentHub || false;\n              if (contentId === 'new') {\n                // Create an empty editor for new content\n                this.editorInstance = new ns.Editor(undefined, undefined, h5pEditorDiv);\n              } else {\n                // Load the editor with populated parameters for existing content\n                this.editorInstance = new ns.Editor(editorModel.library, JSON.stringify({\n                  metadata: editorModel.metadata,\n                  params: editorModel.params\n                }), h5pEditorDiv);\n              }\n              h5pCreateDiv.hidden = false;\n            case 46:\n            case \"end\":\n              return _context4.stop();\n          }\n        }, _callee4, this, [[4, 10]]);\n      }));\n      function render(_x4) {\n        return _render.apply(this, arguments);\n      }\n      return render;\n    }()\n  }], [{\n    key: \"observedAttributes\",\n    get: function get() {\n      return ['content-id', 'h5p-url'];\n    }\n  }, {\n    key: \"initTemplate\",\n    value: function initTemplate() {\n      // We create the static template only once\n      if (!H5PEditorComponent.template) {\n        H5PEditorComponent.template = document.createElement('template');\n        H5PEditorComponent.template.innerHTML = \"\\n            <style>\\n            .h5peditor-semi-fullscreen {\\n                margin: 0;\\n                padding: 0;\\n                position: fixed;\\n                overflow-y: scroll;\\n                box-sizing: border-box;\\n                height: 100%;\\n                width: 100%;\\n                left: 0;\\n                top: 0;\\n            }\\n            </style>\\n            <div class=\\\"h5p-editor-component-root\\\"></div>\";\n      }\n    }\n  }]);\n  return H5PEditorComponent;\n}( /*#__PURE__*/_wrapNativeSuper(HTMLElement));","map":{"version":3,"names":["mergeH5PIntegration","addScripts","H5PEditorComponent","_HTMLElement","_inherits","_super","_createSuper","_this","_classCallCheck","call","resize","h5pEditorIframe","querySelector","newHeight","_c","_b","_a","contentWindow","document","body","scrollHeight","undefined","style","height","concat","toString","save","_asyncToGenerator","_regeneratorRuntime","mark","_callee","params","content","saveResponseObject","requestBody","wrap","_callee$","_context","prev","next","editorInstance","dispatchAndThrowError","saveContentCallback","getParams","isMainTitleSet","Promise","res","rej","getContent","c","err","sent","t0","library","JSON","parse","contentId","t1","message","setAttribute","dispatchEvent","CustomEvent","detail","metadata","abrupt","stop","onEditorLoaded","event","selector","form","ubername","data","window","H5P","externalDispatcher","off","initTemplate","_createClass","key","get","getAttribute","set","removeAttribute","privateLoadContentCallback","callback","mustRender","render","value","_attributeChangedCallback","_callee2","name","oldVal","newVal","_callee2$","_context2","attributeChangedCallback","_x","_x2","_x3","apply","arguments","_connectedCallback","_callee3","_this2","_callee3$","_context3","appendChild","template","cloneNode","root","resizeObserver","ResizeObserver","observe","connectedCallback","disconnectedCallback","disconnect","eventName","Error","_render","_callee4","editorModel","h5pCreateDiv","h5pEditorDiv","_callee4$","_context4","loadContentCallback","innerHTML","preventInit","integration","scripts","getElementsByTagName","createElement","className","hidden","H5PEditor","getAjaxUrl","action","parameters","url","editor","ajaxPath","property","Object","prototype","hasOwnProperty","location","search","replace","h5pIsInitialized","init","on","$","jQuery","basePath","libraryUrl","fileIcon","filesPath","apiVersion","contentLanguage","language","copyrightSemantics","metadataSemantics","assets","baseUrl","enableContentHub","ns","Editor","stringify","_x4","_wrapNativeSuper","HTMLElement"],"sources":["/Users/maxoliverstapyltonnorris/H5P-Nodejs-library/packages/h5p-webcomponents/src/h5p-editor.ts"],"sourcesContent":["import type { IEditorModel, IContentMetadata } from '@lumieducation/h5p-server';\n\nimport { mergeH5PIntegration } from './h5p-utils';\nimport { addScripts } from './dom-utils';\n\ndeclare global {\n    /**\n     * The H5P core \"class\" for the editor.\n     */\n    // eslint-disable-next-line vars-on-top, no-var\n    var H5PEditor;\n    /**\n     * Used by the H5P core for namespacing.\n     */\n    // eslint-disable-next-line vars-on-top, no-var\n    var ns;\n}\n\nexport class H5PEditorComponent extends HTMLElement {\n    constructor() {\n        super();\n\n        H5PEditorComponent.initTemplate();\n    }\n\n    public get contentId(): string {\n        return this.getAttribute('content-id') ?? undefined;\n    }\n\n    public set contentId(contentId: string) {\n        if (!contentId) {\n            this.removeAttribute('content-id');\n        } else {\n            this.setAttribute('content-id', contentId);\n        }\n    }\n\n    /**\n     * Called when the component needs to load data about content. The endpoint\n     * called in here combines the results of H5PEditor.render(...) and\n     * H5PEditor.getContent(...) to avoid too many requests.\n     *\n     * Note that the library, metadata and params property of the returned\n     * object must only be defined if contentId is defined.\n     *\n     * Should throw an error with a message in the message property if something\n     * goes wrong.\n     */\n    public get loadContentCallback(): (contentId: string) => Promise<\n        IEditorModel & {\n            library?: string;\n            metadata?: IContentMetadata;\n            params?: any;\n        }\n    > {\n        return this.privateLoadContentCallback;\n    }\n\n    public set loadContentCallback(\n        callback: (contentId: string) => Promise<\n            IEditorModel & {\n                library?: string;\n                metadata?: IContentMetadata;\n                params?: any;\n            }\n        >\n    ) {\n        // We only (re-)render the component if the callback was really changed.\n        const mustRender = this.privateLoadContentCallback !== callback;\n        this.privateLoadContentCallback = callback;\n        if (mustRender) {\n            this.render(this.contentId);\n        }\n    }\n\n    /**\n     * Indicates changes to which attributes should trigger calls to\n     * attributeChangedCallback.\n     */\n    public static get observedAttributes(): string[] {\n        return ['content-id', 'h5p-url'];\n    }\n\n    private static template: HTMLTemplateElement;\n\n    /**\n     * Called when the component needs to save data about content. The endpoint\n     * called here should call H5PEditor.saveOrUpdateContentReturnMetaData(...).\n     * Note that it makes sense to use PATCH requests for updates and POST\n     * requests for new content, but it's up to you how you implement this. See\n     * defaultSaveContentCallback for an example.\n     *\n     * Should throw an error with a message in the message property if something\n     * goes wrong.\n     * @param contentId the contentId which needs to be saved; can be undefined\n     * for new content, which hasn't been saved before\n     * @param requestBody the data needed by the server; usually encoded as JSON\n     * string and sent to the server\n     * @returns the newly assigned content id and metadata\n     */\n    public saveContentCallback: (\n        contentId: string,\n        requestBody: { library: string; params: any }\n    ) => Promise<{ contentId: string; metadata: IContentMetadata }>;\n\n    private editorInstance: any;\n    /**\n     * Stores the H5P instance (H5P native object of the core).\n     */\n\n    private privateLoadContentCallback: (contentId: string) => Promise<\n        IEditorModel & {\n            library?: string;\n            metadata?: IContentMetadata;\n            params?: any;\n        }\n    >;\n\n    private resizeObserver: ResizeObserver;\n\n    private root: HTMLElement;\n\n    private static initTemplate(): void {\n        // We create the static template only once\n        if (!H5PEditorComponent.template) {\n            H5PEditorComponent.template = document.createElement('template');\n            H5PEditorComponent.template.innerHTML = `\n            <style>\n            .h5peditor-semi-fullscreen {\n                margin: 0;\n                padding: 0;\n                position: fixed;\n                overflow-y: scroll;\n                box-sizing: border-box;\n                height: 100%;\n                width: 100%;\n                left: 0;\n                top: 0;\n            }\n            </style>\n            <div class=\"h5p-editor-component-root\"></div>`;\n        }\n    }\n\n    /**\n     * Called when one of the attributes in observedAttributes changes.\n     */\n    public async attributeChangedCallback(\n        name: string,\n        oldVal: any,\n        newVal: any\n    ): Promise<void> {\n        // We don't render if the component's content id changes from 'new'\n        // to something else, as this would lead to flickering when saving\n        // newly created content.\n        if (name === 'content-id' && oldVal !== newVal && oldVal !== 'new') {\n            await this.render(newVal);\n        }\n    }\n\n    /**\n     * Called when the component is added to the DOM.\n     */\n    public async connectedCallback(): Promise<void> {\n        this.appendChild(H5PEditorComponent.template.content.cloneNode(true));\n        this.root = this.querySelector('.h5p-editor-component-root');\n\n        this.resizeObserver = new ResizeObserver(() => {\n            this.resize();\n        });\n        this.resizeObserver.observe(this);\n\n        await this.render(this.contentId);\n    }\n\n    /**\n     * Called when the component is removed from the DOM.\n     */\n    public disconnectedCallback(): void {\n        if (this.resizeObserver) {\n            this.resizeObserver.disconnect();\n            this.resizeObserver = null;\n        }\n\n        // Unregister our event listener from the global H5P dispatcher.\n        if (window.H5P?.externalDispatcher) {\n            window.H5P.externalDispatcher.off(\n                'editorloaded',\n                this.onEditorLoaded\n            );\n        }\n    }\n\n    /**\n     * Call this method when the iframe containing the editor needs to be\n     * resized, e.g. because the some\n     */\n    public resize = (): void => {\n        const h5pEditorIframe = this.querySelector(\n            '.h5p-editor-iframe'\n        ) as HTMLIFrameElement;\n        if (h5pEditorIframe) {\n            const newHeight =\n                h5pEditorIframe.contentWindow?.document?.body?.scrollHeight;\n            if (newHeight !== undefined) {\n                h5pEditorIframe.style.height = `${h5pEditorIframe.contentWindow.document.body.scrollHeight.toString()}px`;\n            }\n        }\n    };\n\n    /**\n     * Call save() to get data from the H5P editor and send it to the server.\n     * You can use the saveContentCallback hook to customize server requests.\n     * The component emits 'saved', 'save-error' and 'validation-error' events,\n     * depending on success of the function. You can subscribe to those or use\n     * the promise's return value and catch the errors in a try-catch block.\n     * @throws an error if something went wrong\n     * @returns the contentId and metadata of the saved content\n     */\n    public save = async (): Promise<{\n        contentId: string;\n        metadata: IContentMetadata;\n    }> => {\n        if (this.editorInstance === undefined) {\n            this.dispatchAndThrowError(\n                'save-error',\n                'editorInstance of h5p editor not defined.'\n            );\n        }\n        if (!this.saveContentCallback) {\n            this.dispatchAndThrowError(\n                'save-error',\n                'saveContentCallback of H5P Editor Web Component not defined.'\n            );\n        }\n\n        // Get parameters (and also validates them as a side effect)\n        const params = this.editorInstance.getParams();\n        if (!params.params) {\n            this.dispatchAndThrowError(\n                'validation-error',\n                'The parameters entered by the user are invalid.'\n            );\n        }\n        // Validate mandatory main title. Prevent submitting if that's not set.\n        // Deliberately doing it after getParams(), so that any other validation\n        // problems are also revealed.\n        if (!this.editorInstance.isMainTitleSet()) {\n            this.dispatchAndThrowError(\n                'validation-error',\n                \"The main title of the content hasn't been set.\"\n            );\n        }\n\n        let content: { library: string; params: string };\n        try {\n            content = await new Promise<{ library: string; params: string }>(\n                (res, rej) => {\n                    // By calling getContent we also upgrade the content (this\n                    // is an unexpected side effect)\n                    this.editorInstance.getContent(\n                        (c) => {\n                            res(c);\n                        },\n                        (err) => {\n                            rej(err);\n                        }\n                    );\n                }\n            );\n        } catch (error) {\n            this.dispatchAndThrowError('validation-error', error.toString());\n        }\n\n        let saveResponseObject: {\n            contentId: string;\n            metadata: IContentMetadata;\n        };\n\n        const requestBody = {\n            library: content.library,\n            params: JSON.parse(content.params)\n        };\n        try {\n            saveResponseObject = await this.saveContentCallback(\n                this.contentId === 'new' ? undefined : this.contentId,\n                requestBody\n            );\n        } catch (error) {\n            this.dispatchAndThrowError('save-error', error.message);\n        }\n\n        if (this.contentId !== saveResponseObject.contentId) {\n            this.setAttribute('content-id', saveResponseObject.contentId);\n        }\n\n        this.dispatchEvent(\n            new CustomEvent('saved', {\n                detail: {\n                    contentId: saveResponseObject.contentId,\n                    metadata: saveResponseObject.metadata\n                }\n            })\n        );\n        return saveResponseObject;\n    };\n\n    /**\n     * Dispatches an event of the specified name and throws an error whose error\n     * message starts with the eventName.\n     * @param eventName\n     * @param message\n     */\n    private dispatchAndThrowError(eventName: string, message: string): void {\n        this.dispatchEvent(\n            new CustomEvent(eventName, {\n                detail: {\n                    message\n                }\n            })\n        );\n        throw new Error(`${eventName}: ${message}`);\n    }\n\n    /**\n     * Called by the global H5P event dispatcher when any editor was loaded.\n     */\n    private onEditorLoaded = (event: { data: string }): void => {\n        // We must manually check if our editor instance is initialized, as the\n        // event is only sent globally.\n        if (this.editorInstance.selector.form) {\n            this.dispatchEvent(\n                new CustomEvent('editorloaded', {\n                    detail: { contentId: this.contentId, ubername: event.data }\n                })\n            );\n            // After our editor has been initialized, it will never fire the\n            // global event again, so we can unsubscribe from it.\n            if (window.H5P?.externalDispatcher) {\n                window.H5P.externalDispatcher.off(\n                    'editorloaded',\n                    this.onEditorLoaded\n                );\n            }\n        }\n    };\n\n    /**\n     * Displays the editor inside the component by creating a new DOM tree.\n     * @param contentId the content id to display or undefined if a new piece\n     * of content was created\n     */\n    private async render(contentId?: string): Promise<void> {\n        if (!this.loadContentCallback) {\n            return;\n        }\n\n        if (!contentId) {\n            return;\n        }\n\n        let editorModel: IEditorModel & {\n            library?: string;\n            metadata?: IContentMetadata;\n            params?: any;\n        };\n        try {\n            editorModel = await this.loadContentCallback(\n                contentId === 'new' ? undefined : contentId\n            );\n        } catch (error) {\n            this.root.innerHTML = `<p>Error loading H5P content from server: ${error.message}`;\n            return;\n        }\n\n        // Reset DOM tree inside component.\n        this.root.innerHTML = '';\n\n        // We have to prevent H5P from initializing when the h5p.js file is\n        // loaded.\n        if (!window.H5P) {\n            window.H5P = {} as any;\n        }\n        window.H5P.preventInit = true;\n\n        // We merge the H5P integration we received from the server with the one\n        // that already exists in the window globally to allow for several H5P\n        // content objects on a single page.\n        mergeH5PIntegration(\n            editorModel.integration,\n            contentId === 'new' ? undefined : contentId\n        );\n\n        // As the editor adds an iframe anyway and styles don't really matter, we\n        // only add the global editor scripts to the whole page, but not the styles\n        // (to avoid side effects).\n        await addScripts(\n            editorModel.scripts,\n            document.getElementsByTagName('head')[0]\n        );\n\n        // Create the necessary DOM tree.\n        const h5pCreateDiv = document.createElement('div');\n        h5pCreateDiv.className = 'h5p-create';\n        h5pCreateDiv.hidden = true;\n        this.root.appendChild(h5pCreateDiv);\n        const h5pEditorDiv = document.createElement('div');\n        h5pEditorDiv.className = 'h5p-editor';\n        h5pCreateDiv.appendChild(h5pEditorDiv);\n\n        // Set up the H5P core editor.\n        H5PEditor.getAjaxUrl = (\n            action: string,\n            parameters: { [x: string]: any }\n        ): string => {\n            let url = editorModel.integration.editor.ajaxPath + action;\n\n            if (parameters !== undefined) {\n                for (const property in parameters) {\n                    if (\n                        Object.prototype.hasOwnProperty.call(\n                            parameters,\n                            property\n                        )\n                    ) {\n                        url = `${url}&${property}=${parameters[property]}`;\n                    }\n                }\n            }\n\n            url += window.location.search.replace(/\\\\?/g, '&');\n            return url;\n        };\n\n        window.H5P.preventInit = false;\n        // Only initialize H5P once to avoid resetting values.\n        if (!window.h5pIsInitialized) {\n            window.H5P.init(this.root);\n            window.h5pIsInitialized = true;\n        }\n\n        // Register our global editorloaded event handler.\n        if (window.H5P.externalDispatcher) {\n            window.H5P.externalDispatcher.on(\n                'editorloaded',\n                this.onEditorLoaded,\n                this\n            );\n        }\n\n        // Configure the H5P core editor.\n        H5PEditor.$ = window.H5P.jQuery;\n        H5PEditor.basePath = editorModel.integration.editor.libraryUrl;\n        H5PEditor.fileIcon = editorModel.integration.editor.fileIcon;\n        H5PEditor.ajaxPath = editorModel.integration.editor.ajaxPath;\n        H5PEditor.filesPath = editorModel.integration.editor.filesPath;\n        H5PEditor.apiVersion = editorModel.integration.editor.apiVersion;\n        H5PEditor.contentLanguage = editorModel.integration.editor.language;\n        H5PEditor.copyrightSemantics =\n            editorModel.integration.editor.copyrightSemantics;\n        H5PEditor.metadataSemantics =\n            editorModel.integration.editor.metadataSemantics;\n        H5PEditor.assets = editorModel.integration.editor.assets;\n        H5PEditor.baseUrl = '';\n        H5PEditor.contentId = contentId === 'new' ? undefined : contentId;\n        H5PEditor.enableContentHub =\n            editorModel.integration.editor.enableContentHub || false;\n\n        if (contentId === 'new') {\n            // Create an empty editor for new content\n            this.editorInstance = new ns.Editor(\n                undefined,\n                undefined,\n                h5pEditorDiv\n            );\n        } else {\n            // Load the editor with populated parameters for existing content\n            this.editorInstance = new ns.Editor(\n                editorModel.library,\n                JSON.stringify({\n                    metadata: editorModel.metadata,\n                    params: editorModel.params\n                }),\n                h5pEditorDiv\n            );\n        }\n\n        h5pCreateDiv.hidden = false;\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}